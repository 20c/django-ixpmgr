{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "IX-API",
    "description": "This API allows to config/change/delete Internet Exchange services",
    "contact": {
      "url": "https://ix-api.net",
      "email": "team@ix-api.net"
    }
  },
  "paths": {
    "/auth/token": {
      "post": {
        "operationId": "auth_token_create",
        "description": "Authenticate a customer identified by\n`api_key` and `api_secret`.",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "AuthToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth-token"
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html",
                            "https://errors.ix-api.net/v2/not-authenticated.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "AuthTokenRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth-token-request"
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "auth_token_refresh",
        "description": "Reauthenticate the API user, issue a new `access_token`\nand `refresh_token` pair by providing the `refresh_token`\nin the request body.",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "AuthToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth-token"
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html",
                            "https://errors.ix-api.net/v2/not-authenticated.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "RefreshTokenRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refresh-token-request"
              }
            }
          }
        }
      }
    },
    "/facilities": {
      "get": {
        "operationId": "facilities_list",
        "description": "Get a (filtered) list of `facilities`.",
        "tags": [
          "facilities"
        ],
        "responses": {
          "200": {
            "description": "List of: Facility",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/facility"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "cluster",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by cluster"
          },
          {
            "name": "device",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by device"
          },
          {
            "name": "capability_speed",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed"
          },
          {
            "name": "capability_speed__lt",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed__lt"
          },
          {
            "name": "capability_speed__lte",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed__lte"
          },
          {
            "name": "capability_speed__gt",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed__gt"
          },
          {
            "name": "capability_speed__gte",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed__gte"
          },
          {
            "name": "organisation_name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by organisation_name"
          },
          {
            "name": "metro_area",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by metro_area"
          },
          {
            "name": "address_country",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by address_country"
          },
          {
            "name": "address_locality",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by address_locality"
          },
          {
            "name": "postal_code",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by postal_code"
          }
        ]
      }
    },
    "/facilities/{id}": {
      "get": {
        "operationId": "facilities_read",
        "description": "Retrieve a facility by id",
        "tags": [
          "facilities"
        ],
        "responses": {
          "200": {
            "description": "List of: Facility",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/facility"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/devices": {
      "get": {
        "operationId": "devices_list",
        "description": "List available devices",
        "tags": [
          "devices"
        ],
        "responses": {
          "200": {
            "description": "List of: Device",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/device"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by name"
          },
          {
            "name": "capability_media_type",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_media_type"
          },
          {
            "name": "capability_speed",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed"
          },
          {
            "name": "capability_speed__lt",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed__lt"
          },
          {
            "name": "capability_speed__lte",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed__lte"
          },
          {
            "name": "capability_speed__gt",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed__gt"
          },
          {
            "name": "capability_speed__gte",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capability_speed__gte"
          },
          {
            "name": "faclitiy",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by faclitiy"
          },
          {
            "name": "product",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by product"
          }
        ]
      }
    },
    "/devices/{id}": {
      "get": {
        "operationId": "devices_read",
        "description": "Get a specific device identified by id",
        "tags": [
          "devices"
        ],
        "responses": {
          "200": {
            "description": "Device",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/pops": {
      "get": {
        "operationId": "pops_list",
        "description": "List all PoPs",
        "tags": [
          "pops"
        ],
        "responses": {
          "200": {
            "description": "List of: Point Of Presence",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/point-of-presence"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "physical_facility",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by physical_facility"
          },
          {
            "name": "reachable_facility",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by reachable_facility"
          },
          {
            "name": "reachable_devices",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by reachable_devices"
          }
        ]
      }
    },
    "/pops/{id}": {
      "get": {
        "operationId": "pops_read",
        "description": "Get a single point of presence",
        "tags": [
          "pops"
        ],
        "responses": {
          "200": {
            "description": "Point Of Presence",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/point-of-presence"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/product-offerings": {
      "get": {
        "operationId": "product-offerings_list",
        "description": "List all (filtered) products available on the platform",
        "tags": [
          "product-offerings"
        ],
        "responses": {
          "200": {
            "description": "List of: Polymorphic Product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/product-offering"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "exchange_lan",
                "p2p_vc",
                "mp2mp_vc",
                "p2mp_vc",
                "cloud_vc"
              ]
            },
            "required": false,
            "in": "query",
            "description": "Filter by type"
          },
          {
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by name"
          },
          {
            "name": "handover_metro_area",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by handover_metro_area"
          },
          {
            "name": "handover_metro_area_network",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by handover_metro_area_network"
          },
          {
            "name": "service_metro_area",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by service_metro_area"
          },
          {
            "name": "service_metro_area_network",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by service_metro_area_network"
          },
          {
            "name": "service_provider",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by service_provider"
          },
          {
            "name": "downgrade_allowed",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "true"
              ]
            },
            "required": false,
            "in": "query",
            "description": "Filter by downgrade_allowed"
          },
          {
            "name": "upgrade_allowed",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "required": false,
            "in": "query",
            "description": "Filter by upgrade_allowed"
          },
          {
            "name": "bandwidth",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by bandwidth"
          },
          {
            "name": "physical_port_speed",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by physical_port_speed"
          },
          {
            "name": "service_provider_region",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by service_provider_region"
          },
          {
            "name": "delivery_method",
            "schema": {
              "type": "string",
              "enum": [
                "dedicated",
                "shared"
              ]
            },
            "required": false,
            "in": "query",
            "description": "Filter by delivery_method"
          }
        ]
      }
    },
    "/demarcs": {
      "get": {
        "operationId": "demarcs_list",
        "description": "List all `demarc`s.",
        "tags": [
          "demarcs"
        ],
        "responses": {
          "200": {
            "description": "List of: Demarc",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/demarcation-point"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "state",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state"
          },
          {
            "name": "state__is_not",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state__is_not"
          },
          {
            "name": "media_type",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by media_type"
          },
          {
            "name": "pop",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by pop"
          },
          {
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by name"
          },
          {
            "name": "external_ref",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by external_ref"
          },
          {
            "name": "speed",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by speed"
          },
          {
            "name": "connection",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by connection"
          }
        ]
      }
    },
    "/demarcs/{id}": {
      "get": {
        "operationId": "demarcs_read",
        "description": "Retrieve a `demarc`",
        "tags": [
          "demarcs"
        ],
        "responses": {
          "200": {
            "description": "Demarc",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/demarcation-point"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/connections": {
      "get": {
        "operationId": "connections_list",
        "description": "List all `connection`s.",
        "tags": [
          "connections"
        ],
        "responses": {
          "200": {
            "description": "List of: Connection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/connection"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "state",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state"
          },
          {
            "name": "state__is_not",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state__is_not"
          },
          {
            "name": "mode",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by mode"
          },
          {
            "name": "mode__is_not",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by mode__is_not"
          },
          {
            "name": "demarc",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by demarc"
          },
          {
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by name"
          },
          {
            "name": "external_ref",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by external_ref"
          }
        ]
      }
    },
    "/connections/{id}": {
      "get": {
        "operationId": "connections_read",
        "description": "Read a `connection`.",
        "tags": [
          "connections"
        ],
        "responses": {
          "200": {
            "description": "Connection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connection"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/network-service-configs": {
      "get": {
        "operationId": "network-service-configs_list",
        "description": "Get all `network-service-config`s.",
        "tags": [
          "network-service-configs"
        ],
        "responses": {
          "200": {
            "description": "List of: Polymorphic Network Service Config",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/network-service-config"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "state",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state"
          },
          {
            "name": "state__is_not",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state__is_not"
          },
          {
            "name": "managing_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by managing_account"
          },
          {
            "name": "consuming_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by consuming_account"
          },
          {
            "name": "external_ref",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by external_ref"
          },
          {
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "exchange_lan",
                "p2p_vc",
                "p2mp_vc",
                "mp2mp_vc",
                "cloud_vc"
              ]
            },
            "required": false,
            "in": "query",
            "description": "Filter by type"
          },
          {
            "name": "inner_vlan",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by inner_vlan"
          },
          {
            "name": "outer_vlan",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by outer_vlan"
          },
          {
            "name": "capacity",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by capacity"
          },
          {
            "name": "connection",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by connection"
          }
        ]
      },
      "post": {
        "operationId": "network-service-configs_create",
        "description": "Create a `network-service-config`.",
        "tags": [
          "network-service-configs"
        ],
        "responses": {
          "201": {
            "description": "Polymorphic Network Service Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorhic Network Service Config Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network-service-config-request"
              }
            }
          }
        }
      }
    },
    "/network-service-configs/{id}": {
      "get": {
        "operationId": "network-service-configs_read",
        "description": "Get a `network-service-config`",
        "tags": [
          "network-service-configs"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Service Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "put": {
        "operationId": "network-service-configs_update",
        "description": "Update an exisiting `network-service-config`",
        "tags": [
          "network-service-configs"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Service Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Network Service Config",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network-service-config-update"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "patch": {
        "operationId": "network-service-configs_partial_update",
        "description": "Update parts of an exisiting `network-service-config`.",
        "tags": [
          "network-service-configs"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Service Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Network Service Config",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network-service-config-update-partial"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "delete": {
        "operationId": "network-service-configs_destroy",
        "description": "Deconfigure the network service.",
        "tags": [
          "network-service-configs"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Service Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/network-feature-configs": {
      "get": {
        "operationId": "network-feature-configs_list",
        "description": "Get all network feature configs.",
        "tags": [
          "network-feature-configs"
        ],
        "responses": {
          "200": {
            "description": "List of: Polymorphic Network Feature Config",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/network-feature-config"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "state",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state"
          },
          {
            "name": "state__is_not",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state__is_not"
          },
          {
            "name": "managing_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by managing_account"
          },
          {
            "name": "consuming_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by consuming_account"
          },
          {
            "name": "external_ref",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by external_ref"
          },
          {
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "blackholing",
                "route_server",
                "ixp_router"
              ]
            },
            "required": false,
            "in": "query",
            "description": "Filter by type"
          },
          {
            "name": "service_config",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by service_config"
          },
          {
            "name": "network_feature",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by network_feature"
          }
        ]
      },
      "post": {
        "operationId": "network-feature-configs_create",
        "description": "Create a new feature configuration.\n\nRemeber to provide a feature `type` and the id of the\n`network_feature` you want to configure.\nAdditionally you have to provide the `network_service_config`\nwhere you want to use the network feature.\n\nYou can query the available features from the\n`/api/v2/network-features` resource.",
        "tags": [
          "network-feature-configs"
        ],
        "responses": {
          "201": {
            "description": "Polymorphic Network Feature Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-feature-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Network Feature Config Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network-feature-config-request"
              }
            }
          }
        }
      }
    },
    "/network-feature-configs/{id}": {
      "get": {
        "operationId": "network-feature-configs_read",
        "description": "Get a single network feature config.",
        "tags": [
          "network-feature-configs"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Feature Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-feature-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "put": {
        "operationId": "network-feature-configs_update",
        "description": "Update a network feature configuration",
        "tags": [
          "network-feature-configs"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Feature Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-feature-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Network Feauture Config Update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network-feature-config-update"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "patch": {
        "operationId": "network-feature-configs_partial_update",
        "description": "Update parts of a network feature configuration",
        "tags": [
          "network-feature-configs"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Feature Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-feature-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Network Feauture Config Update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network-feature-config-update-partial"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "delete": {
        "operationId": "network-feature-configs_destroy",
        "description": "Remove a network feature config",
        "tags": [
          "network-feature-configs"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Feature Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-feature-config"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "operationId": "accounts_list",
        "description": "Retrieve a list of accounts.\n\nThis includes all accounts the current authorized account\nis managing and the current account itself.",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "List of: Account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/account"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "state",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state"
          },
          {
            "name": "state__is_not",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by state__is_not"
          },
          {
            "name": "managing_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by managing_account"
          },
          {
            "name": "billable",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by billable"
          },
          {
            "name": "external_ref",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by external_ref"
          },
          {
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by name"
          }
        ]
      },
      "post": {
        "operationId": "accounts_create",
        "description": "Create a new account.\n\nPlease remember that an account may require some `contacts`\nto become fully active. Until then it will stay in an `error` state.",
        "tags": [
          "accounts"
        ],
        "responses": {
          "201": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/account-request"
              }
            }
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "operationId": "accounts_read",
        "description": "Get a single account.",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "put": {
        "operationId": "accounts_update",
        "description": "Update the entire account.",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Account Update Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/account-update"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "patch": {
        "operationId": "accounts_partial_update",
        "description": "Update the entire account.",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Account Update Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/account-update-partial"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "operationId": "roles_list",
        "description": "List all roles available.",
        "tags": [
          "roles"
        ],
        "responses": {
          "200": {
            "description": "List of: A role for a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/role"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by name"
          },
          {
            "name": "contact",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by contact"
          }
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "roles_read",
        "description": "Get a single `Role`.",
        "tags": [
          "roles"
        ],
        "responses": {
          "200": {
            "description": "A role for a contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          },
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by name"
          }
        ]
      }
    },
    "/contacts": {
      "get": {
        "operationId": "contacts_list",
        "description": "List available contacts managed by the authorized account.",
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "List of: Contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/contact"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "managing_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by managing_account"
          },
          {
            "name": "consuming_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by consuming_account"
          },
          {
            "name": "external_ref",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by external_ref"
          }
        ]
      },
      "post": {
        "operationId": "contacts_create",
        "description": "Create a new contact.\n\nPlease remember to set the correct `type` of the contact\nwhen sending the request. Available types are `noc`, `billing`,\n`legal` and `implementation`.",
        "tags": [
          "contacts"
        ],
        "responses": {
          "201": {
            "description": "Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "A contact creation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contact-request"
              }
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "operationId": "contacts_read",
        "description": "Get a contact by it's id",
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "put": {
        "operationId": "contacts_update",
        "description": "Update a contact",
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "A contact creation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contact-request"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "patch": {
        "operationId": "contacts_partial_update",
        "description": "Update parts of a contact",
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "A contact creation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contact-request-partial"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "delete": {
        "operationId": "contacts_destroy",
        "description": "Remove a contact",
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/role-assignments": {
      "get": {
        "operationId": "role-assignments_list",
        "description": "List all role assignments for a contact.",
        "tags": [
          "role-assignments"
        ],
        "responses": {
          "200": {
            "description": "List of: A role assignment for a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/role-assignment"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "contact",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by contact"
          }
        ]
      },
      "post": {
        "operationId": "role-assignments_create",
        "description": "Assign a role to a contact.\n\nThe contact needs to have all fields filled, which the\nrole requires. If this is not the case an `UnableToFulfill` error\nwill be returned.",
        "tags": [
          "role-assignments"
        ],
        "responses": {
          "201": {
            "description": "A role assignment for a contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role-assignment"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html",
                            "https://errors.ix-api.net/v2/unable-to-fulfill.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "A role assignment request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role-assignment-request"
              }
            }
          }
        }
      }
    },
    "/role-assignments/{assignment_id}": {
      "get": {
        "operationId": "role-assignments_read",
        "description": "Get a role assignment for a contact.",
        "tags": [
          "role-assignments"
        ],
        "responses": {
          "200": {
            "description": "A role assignment for a contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role-assignment"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "description": "Get by assignment_id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "delete": {
        "operationId": "role-assignments_destroy",
        "description": "Remove a role assignment a role to a contact.\n\nIf the contact is still in use with a given role required,\nthis will yield an `UnableToFulfill` error.",
        "tags": [
          "role-assignments"
        ],
        "responses": {
          "200": {
            "description": "A role assignment for a contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role-assignment"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "UnableToFulfill",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/unable-to-fulfill.html"
                          ]
                        },
                        "title": {
                          "example": "Unable to fulfill your request."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "description": "Get by assignment_id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/ips": {
      "get": {
        "operationId": "ips_list",
        "description": "List all ip addresses (and prefixes).",
        "tags": [
          "ips"
        ],
        "responses": {
          "200": {
            "description": "List of: IP-Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ip-address"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "managing_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by managing_account"
          },
          {
            "name": "consuming_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by consuming_account"
          },
          {
            "name": "external_ref",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by external_ref"
          },
          {
            "name": "network_service",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by network_service"
          },
          {
            "name": "network_service_config",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by network_service_config"
          },
          {
            "name": "network_feature",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by network_feature"
          },
          {
            "name": "network_feature_config",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by network_feature_config"
          },
          {
            "name": "version",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by version"
          },
          {
            "name": "fqdn",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by fqdn"
          },
          {
            "name": "prefix_length",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "in": "query",
            "description": "Filter by prefix_length"
          },
          {
            "name": "valid_not_before",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by valid_not_before"
          },
          {
            "name": "valid_not_after",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by valid_not_after"
          }
        ]
      },
      "post": {
        "operationId": "ips_create",
        "description": "Add an ip host address or network prefix.",
        "tags": [
          "ips"
        ],
        "responses": {
          "201": {
            "description": "IP-Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip-address"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "IP-Address / Prefix allocation Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ip-address-request"
              }
            }
          }
        }
      }
    },
    "/ips/{id}": {
      "get": {
        "operationId": "ips_read",
        "description": "Get a single ip addresses by it's id.",
        "tags": [
          "ips"
        ],
        "responses": {
          "200": {
            "description": "IP-Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip-address"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "put": {
        "operationId": "ips_update",
        "description": "Update an ip address object.\n\nYou can only update\nIP addresses within your current scope. Not all\naddresses you can read you can update.\n\nIf the ip address was allocated for you, you might\nnot be able to change anything but the `fqdn`.",
        "tags": [
          "ips"
        ],
        "responses": {
          "200": {
            "description": "IP-Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip-address"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "IP-Address Update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ip-address-update"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "patch": {
        "operationId": "ips_partial_update",
        "description": "Update parts of an ip address.\n\nAs with the `PUT` opertaion, IP addresses, where you\ndon't have update rights, will yield a `resource access denied`\nerror when attempting an update.\n\nIf the ip address was allocated for you, you might\nnot be able to change anything but the `fqdn`.",
        "tags": [
          "ips"
        ],
        "responses": {
          "200": {
            "description": "IP-Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip-address"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "IP-Address Update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ip-address-update-partial"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/macs": {
      "get": {
        "operationId": "macs_list",
        "description": "List all mac addresses managed by the authorized customer.",
        "tags": [
          "macs"
        ],
        "responses": {
          "200": {
            "description": "MAC-Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mac-address"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "managing_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by managing_account"
          },
          {
            "name": "consuming_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by consuming_account"
          },
          {
            "name": "external_ref",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by external_ref"
          },
          {
            "name": "network_service_config",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by network_service_config"
          },
          {
            "name": "address",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by address"
          },
          {
            "name": "assigned_at",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by assigned_at"
          },
          {
            "name": "valid_not_before",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by valid_not_before"
          },
          {
            "name": "valid_not_after",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by valid_not_after"
          }
        ]
      },
      "post": {
        "operationId": "macs_create",
        "description": "Create a new mac address.",
        "tags": [
          "macs"
        ],
        "responses": {
          "201": {
            "description": "MAC-Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mac-address"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "MAC-Address Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mac-address-request"
              }
            }
          }
        }
      }
    },
    "/macs/{id}": {
      "get": {
        "operationId": "macs_read",
        "description": "Get a single mac address by it's id.",
        "tags": [
          "macs"
        ],
        "responses": {
          "200": {
            "description": "MAC-Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mac-address"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "delete": {
        "operationId": "macs_destroy",
        "description": "Remove a mac address.",
        "tags": [
          "macs"
        ],
        "responses": {
          "200": {
            "description": "MAC-Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mac-address"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/network-services": {
      "get": {
        "operationId": "network-services_list",
        "description": "List available `network-services`.",
        "tags": [
          "network-services"
        ],
        "responses": {
          "200": {
            "description": "List of: Polymorphic Network Services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/network-service"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "managing_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by managing_account"
          },
          {
            "name": "consuming_account",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by consuming_account"
          },
          {
            "name": "external_ref",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by external_ref"
          },
          {
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "exchange_lan",
                "p2p_vc",
                "p2mp_vc",
                "mp2mp_vc",
                "cloud_vc"
              ]
            },
            "required": false,
            "in": "query",
            "description": "Filter by type"
          },
          {
            "name": "pop",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by pop"
          },
          {
            "name": "product",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by product"
          }
        ]
      },
      "post": {
        "operationId": "network-services_create",
        "description": "Create a new network service",
        "tags": [
          "network-services"
        ],
        "responses": {
          "201": {
            "description": "Polymorphic Network Services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Network Service Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network-service-request"
              }
            }
          }
        }
      }
    },
    "/network-services/{id}": {
      "get": {
        "operationId": "network-services_read",
        "description": "Get a specific `network-service` by id.",
        "tags": [
          "network-services"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "put": {
        "operationId": "network-services_update",
        "description": "Update a network service",
        "tags": [
          "network-services"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "patch": {
        "operationId": "network-services_partial_update",
        "description": "Partially update a network service",
        "tags": [
          "network-services"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Network Service Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network-service-request-partial"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "delete": {
        "operationId": "network-services_destroy",
        "description": "Request decomissioning of the network service",
        "tags": [
          "network-services"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-service"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/network-features": {
      "get": {
        "operationId": "network-features_list",
        "description": "List available network features.",
        "tags": [
          "network-features"
        ],
        "responses": {
          "200": {
            "description": "List of: Polymorphic Network Feature",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/network-feature"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "blackholing",
                "route_server",
                "ixp_router"
              ]
            },
            "required": false,
            "in": "query",
            "description": "Filter by type"
          },
          {
            "name": "required",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by required"
          },
          {
            "name": "network_service",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by network_service"
          },
          {
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by name"
          }
        ]
      }
    },
    "/network-features/{id}": {
      "get": {
        "operationId": "network-features_read",
        "description": "Get a single network feature by it's id.",
        "tags": [
          "network-features"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Network Feature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network-feature"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    },
    "/member-joining-rules": {
      "get": {
        "operationId": "member-joining-rules_list",
        "description": "Get a list of vlan members",
        "tags": [
          "member-joining-rules"
        ],
        "responses": {
          "200": {
            "description": "List of: Polymorphic Member Joining Rule",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/member-joining-rule"
                  }
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": "id1,id2,id3"
            },
            "required": false,
            "in": "query",
            "description": "Filter by id",
            "style": "form",
            "explode": false
          },
          {
            "name": "network_service",
            "schema": {
              "type": "string"
            },
            "required": false,
            "in": "query",
            "description": "Filter by network_service"
          }
        ]
      },
      "post": {
        "operationId": "member-joining-rules_create",
        "description": "Create a vlan membership",
        "tags": [
          "member-joining-rules"
        ],
        "responses": {
          "201": {
            "description": "Polymorphic Member Joining Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member-joining-rule"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Member Joining Rule Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/member-joining-rule-request"
              }
            }
          }
        }
      }
    },
    "/member-joining-rules/{id}": {
      "get": {
        "operationId": "member-joining-rules_read",
        "description": "Get a single rule",
        "tags": [
          "member-joining-rules"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Member Joining Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member-joining-rule"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "put": {
        "operationId": "member-joining-rules_update",
        "description": "Update a joining rule",
        "tags": [
          "member-joining-rules"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Member Joining Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member-joining-rule"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Member Joining Rule Update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/member-joining-rule-update"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "patch": {
        "operationId": "member-joining-rules_partial_update",
        "description": "Partially update a joining rule",
        "tags": [
          "member-joining-rules"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Member Joining Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member-joining-rule"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/validation-error.html"
                          ]
                        },
                        "title": {
                          "example": "Some fields did not validate."
                        },
                        "status": {
                          "example": 400
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Polymorphic Member Joining Rule Update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/member-joining-rule-update-partial"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      },
      "delete": {
        "operationId": "member-joining-rules_destroy",
        "description": "Delete a joining rule",
        "tags": [
          "member-joining-rules"
        ],
        "responses": {
          "200": {
            "description": "Polymorphic Member Joining Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member-joining-rule"
                }
              }
            }
          },
          "403": {
            "description": "PermissionDenied",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/permission-denied.html"
                          ]
                        },
                        "title": {
                          "example": "You do not have permission to perform this action."
                        },
                        "status": {
                          "example": 403
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/authentication-error.html",
                            "https://errors.ix-api.net/v2/signature-expired.html"
                          ]
                        },
                        "title": {
                          "example": "Authentication Credentials Invalid"
                        },
                        "status": {
                          "example": 401
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/problem-response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "https://errors.ix-api.net/v2/not-found.html"
                          ]
                        },
                        "title": {
                          "example": "Not found."
                        },
                        "status": {
                          "example": 404
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Get by id",
            "schema": {
              "type": "string",
              "title": "",
              "description": ""
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "auth-token": {
        "allOf": [
          {
            "$ref": "#/components/schemas/auth-token-partial"
          },
          {
            "title": "AuthToken",
            "type": "object",
            "required": [
              "access_token",
              "refresh_token"
            ]
          }
        ]
      },
      "auth-token-partial": {
        "title": "PartialAuthToken",
        "type": "object",
        "description": "AuthToken",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "auth-token-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/auth-token-request-partial"
          },
          {
            "title": "AuthTokenRequest",
            "type": "object",
            "required": [
              "api_key",
              "api_secret"
            ]
          }
        ]
      },
      "auth-token-request-partial": {
        "title": "PartialAuthTokenRequest",
        "type": "object",
        "description": "AuthTokenRequest",
        "properties": {
          "api_key": {
            "type": "string",
            "minLength": 16,
            "maxLength": 16
          },
          "api_secret": {
            "type": "string",
            "minLength": 86,
            "maxLength": 86
          }
        }
      },
      "refresh-token-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/refresh-token-request-partial"
          },
          {
            "title": "RefreshTokenRequest",
            "type": "object",
            "required": [
              "refresh_token"
            ]
          }
        ]
      },
      "refresh-token-request-partial": {
        "title": "PartialRefreshTokenRequest",
        "type": "object",
        "description": "RefreshTokenRequest",
        "properties": {
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "cloud-network-product-offering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/cloud-network-product-offering-partial"
          },
          {
            "title": "CloudNetworkProductOffering",
            "type": "object",
            "required": [
              "id",
              "name",
              "display_name",
              "provider_vlans",
              "resource_type",
              "handover_metro_area_network",
              "handover_metro_area",
              "service_metro_area_network",
              "service_metro_area",
              "min_bandwidth",
              "max_bandwidth",
              "physical_port_speed",
              "service_provider",
              "downgrade_allowed",
              "upgrade_allowed",
              "service_provider_region",
              "delivery_method",
              "type"
            ]
          }
        ]
      },
      "cloud-network-product-offering-partial": {
        "title": "PartialCloudNetworkProductOffering",
        "type": "object",
        "description": "Cloud Network Product",
        "properties": {
          "type": {
            "type": "string",
            "example": "cloud_vc"
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "name": {
            "type": "string",
            "description": "Name of the product",
            "maxLength": 160
          },
          "display_name": {
            "type": "string",
            "maxLength": 256
          },
          "provider_vlans": {
            "type": "string",
            "enum": [
              "single",
              "multi"
            ]
          },
          "resource_type": {
            "type": "string",
            "enum": [
              "connection",
              "demarc",
              "network_service"
            ]
          },
          "handover_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "handover_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "min_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "physical_port_speed": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "service_provider": {
            "type": "string"
          },
          "downgrade_allowed": {
            "type": "boolean"
          },
          "upgrade_allowed": {
            "type": "boolean"
          },
          "service_provider_region": {
            "type": "string",
            "nullable": true
          },
          "delivery_method": {
            "type": "string",
            "enum": [
              "dedicated",
              "shared"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "device": {
        "allOf": [
          {
            "$ref": "#/components/schemas/device-partial"
          },
          {
            "title": "Device",
            "type": "object",
            "required": [
              "name",
              "id"
            ]
          }
        ]
      },
      "device-partial": {
        "title": "PartialDevice",
        "type": "object",
        "description": "Device",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the device\n",
            "example": "edge2.moon.space-ix.net",
            "maxLength": 180
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/device-capability"
            }
          },
          "physical_facility": {
            "type": "string",
            "description": "Identifier of the facilitiy where the device\nis physically based.",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        }
      },
      "device-capability": {
        "allOf": [
          {
            "$ref": "#/components/schemas/device-capability-partial"
          },
          {
            "title": "DeviceCapability",
            "type": "object"
          }
        ]
      },
      "device-capability-partial": {
        "title": "PartialDeviceCapability",
        "type": "object",
        "description": "Device Capability",
        "properties": {
          "media_type": {
            "type": "string",
            "description": "The media type of the port (e.g. 1000BASE-LX, 10GBASE-LR, ...)\n",
            "example": "1000BASE-LX",
            "readOnly": true,
            "maxLength": 20
          },
          "speed": {
            "type": "integer",
            "description": "Speed of port in Mbit/s\n",
            "example": 1000,
            "readOnly": true
          },
          "qinq_capable": {
            "type": "boolean",
            "description": "Ports supports inner vlan tag (QinQ)\n",
            "example": true,
            "readOnly": true
          },
          "max_lag": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum count of ports which can be bundled to a max_lag",
            "example": 8,
            "readOnly": true,
            "minimum": 0,
            "maximum": 32767
          },
          "availability": {
            "type": "integer",
            "format": "int32",
            "description": "Count of available ports on device\n",
            "example": 23,
            "readOnly": true,
            "minimum": 0,
            "maximum": 2147483647
          }
        }
      },
      "device-connection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/device-connection-partial"
          },
          {
            "title": "DeviceConnection",
            "type": "object",
            "required": [
              "max_capacity",
              "device",
              "connected_device",
              "id"
            ]
          }
        ]
      },
      "device-connection-partial": {
        "title": "PartialDeviceConnection",
        "type": "object",
        "description": "Device Connection",
        "properties": {
          "max_capacity": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647
          },
          "device": {
            "type": "string"
          },
          "connected_device": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        }
      },
      "exchange-lan-network-product-offering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-product-offering-partial"
          },
          {
            "title": "ExchangeLanNetworkProductOffering",
            "type": "object",
            "required": [
              "id",
              "name",
              "display_name",
              "provider_vlans",
              "resource_type",
              "handover_metro_area_network",
              "handover_metro_area",
              "service_metro_area_network",
              "service_metro_area",
              "min_bandwidth",
              "max_bandwidth",
              "physical_port_speed",
              "service_provider",
              "downgrade_allowed",
              "upgrade_allowed",
              "type"
            ]
          }
        ]
      },
      "exchange-lan-network-product-offering-partial": {
        "title": "PartialExchangeLanNetworkProductOffering",
        "type": "object",
        "description": "Exchange Lan Network Product",
        "properties": {
          "type": {
            "type": "string",
            "example": "exchange_lan"
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "name": {
            "type": "string",
            "description": "Name of the product",
            "maxLength": 160
          },
          "display_name": {
            "type": "string",
            "maxLength": 256
          },
          "provider_vlans": {
            "type": "string",
            "enum": [
              "single",
              "multi"
            ]
          },
          "resource_type": {
            "type": "string",
            "enum": [
              "connection",
              "demarc",
              "network_service"
            ]
          },
          "handover_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "handover_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "min_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "physical_port_speed": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "service_provider": {
            "type": "string"
          },
          "downgrade_allowed": {
            "type": "boolean"
          },
          "upgrade_allowed": {
            "type": "boolean"
          },
          "metro_area": {
            "type": "string",
            "description": "The metro area the product is available\n",
            "example": "MUC",
            "nullable": true,
            "maxLength": 3
          }
        },
        "required": [
          "type"
        ]
      },
      "facility": {
        "allOf": [
          {
            "$ref": "#/components/schemas/facility-partial"
          },
          {
            "title": "Facility",
            "type": "object",
            "required": [
              "name",
              "metro_area",
              "address_country",
              "address_locality",
              "address_region",
              "postal_code",
              "street_address",
              "organisation_name",
              "id"
            ]
          }
        ]
      },
      "facility-partial": {
        "title": "PartialFacility",
        "type": "object",
        "description": "Facility",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Datacenter, how the DC calls itself.\n",
            "example": "Crater DC Moon 1",
            "maxLength": 80
          },
          "metro_area": {
            "type": "string",
            "description": "3 Letter (IATA) Airport Code of the MetroArea where the DC is in.\n",
            "example": "FRA",
            "maxLength": 3
          },
          "address_country": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code, for example DE\n",
            "example": "US",
            "maxLength": 2
          },
          "address_locality": {
            "type": "string",
            "description": "The locality/city. For example, Mountain View.",
            "example": "Mountain View",
            "maxLength": 80
          },
          "address_region": {
            "type": "string",
            "description": "The region. For example, CA",
            "example": "CA",
            "maxLength": 80
          },
          "postal_code": {
            "type": "string",
            "description": "A postal code. For example, 9404",
            "example": "9409",
            "maxLength": 18
          },
          "street_address": {
            "type": "string",
            "description": "The street address. For example, 1600 Amphitheatre Pkwy.",
            "example": "1600 Amphitheatre Pkwy.",
            "maxLength": 80
          },
          "peeringdb_facility_id": {
            "type": "integer",
            "format": "int32",
            "description": "[PeeringDB](https://www.peeringdb.com) facitlity ID,\ncan be extracted from the url https://www.peeringdb.com/fac/$id\n",
            "example": 103,
            "nullable": true,
            "minimum": 0,
            "maximum": 2147483647
          },
          "organisation_name": {
            "type": "string",
            "description": "Name of Datacenter operator",
            "example": "Moon Datacenters",
            "maxLength": 80
          },
          "cluster": {
            "type": "string",
            "description": "Group of facilities within the same building/campus",
            "example": "60 Hudson, NYC",
            "nullable": true,
            "maxLength": 80
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        }
      },
      "m-p2mp-network-product-offering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/m-p2mp-network-product-offering-partial"
          },
          {
            "title": "MP2MPNetworkProductOffering",
            "type": "object",
            "required": [
              "id",
              "name",
              "display_name",
              "provider_vlans",
              "resource_type",
              "handover_metro_area_network",
              "handover_metro_area",
              "service_metro_area_network",
              "service_metro_area",
              "min_bandwidth",
              "max_bandwidth",
              "physical_port_speed",
              "service_provider",
              "downgrade_allowed",
              "upgrade_allowed",
              "type"
            ]
          }
        ]
      },
      "m-p2mp-network-product-offering-partial": {
        "title": "PartialMP2MPNetworkProductOffering",
        "type": "object",
        "description": "MP2MP Network Product",
        "properties": {
          "type": {
            "type": "string",
            "example": "mp2mp_vc"
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "name": {
            "type": "string",
            "description": "Name of the product",
            "maxLength": 160
          },
          "display_name": {
            "type": "string",
            "maxLength": 256
          },
          "provider_vlans": {
            "type": "string",
            "enum": [
              "single",
              "multi"
            ]
          },
          "resource_type": {
            "type": "string",
            "enum": [
              "connection",
              "demarc",
              "network_service"
            ]
          },
          "handover_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "handover_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "min_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "physical_port_speed": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "service_provider": {
            "type": "string"
          },
          "downgrade_allowed": {
            "type": "boolean"
          },
          "upgrade_allowed": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "p2mp-network-product-offering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2mp-network-product-offering-partial"
          },
          {
            "title": "P2MPNetworkProductOffering",
            "type": "object",
            "required": [
              "id",
              "name",
              "display_name",
              "provider_vlans",
              "resource_type",
              "handover_metro_area_network",
              "handover_metro_area",
              "service_metro_area_network",
              "service_metro_area",
              "min_bandwidth",
              "max_bandwidth",
              "physical_port_speed",
              "service_provider",
              "downgrade_allowed",
              "upgrade_allowed",
              "type"
            ]
          }
        ]
      },
      "p2mp-network-product-offering-partial": {
        "title": "PartialP2MPNetworkProductOffering",
        "type": "object",
        "description": "P2MP Network Product",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2mp_vc"
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "name": {
            "type": "string",
            "description": "Name of the product",
            "maxLength": 160
          },
          "display_name": {
            "type": "string",
            "maxLength": 256
          },
          "provider_vlans": {
            "type": "string",
            "enum": [
              "single",
              "multi"
            ]
          },
          "resource_type": {
            "type": "string",
            "enum": [
              "connection",
              "demarc",
              "network_service"
            ]
          },
          "handover_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "handover_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "min_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "physical_port_speed": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "service_provider": {
            "type": "string"
          },
          "downgrade_allowed": {
            "type": "boolean"
          },
          "upgrade_allowed": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "p2p-network-product-offering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2p-network-product-offering-partial"
          },
          {
            "title": "P2PNetworkProductOffering",
            "type": "object",
            "required": [
              "id",
              "name",
              "display_name",
              "provider_vlans",
              "resource_type",
              "handover_metro_area_network",
              "handover_metro_area",
              "service_metro_area_network",
              "service_metro_area",
              "min_bandwidth",
              "max_bandwidth",
              "physical_port_speed",
              "service_provider",
              "downgrade_allowed",
              "upgrade_allowed",
              "type"
            ]
          }
        ]
      },
      "p2p-network-product-offering-partial": {
        "title": "PartialP2PNetworkProductOffering",
        "type": "object",
        "description": "P2P Network Product",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2p_vc"
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "name": {
            "type": "string",
            "description": "Name of the product",
            "maxLength": 160
          },
          "display_name": {
            "type": "string",
            "maxLength": 256
          },
          "provider_vlans": {
            "type": "string",
            "enum": [
              "single",
              "multi"
            ]
          },
          "resource_type": {
            "type": "string",
            "enum": [
              "connection",
              "demarc",
              "network_service"
            ]
          },
          "handover_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "handover_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area_network": {
            "type": "string",
            "maxLength": 8
          },
          "service_metro_area": {
            "type": "string",
            "maxLength": 8
          },
          "min_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_bandwidth": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "physical_port_speed": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "service_provider": {
            "type": "string"
          },
          "downgrade_allowed": {
            "type": "boolean"
          },
          "upgrade_allowed": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "point-of-presence": {
        "allOf": [
          {
            "$ref": "#/components/schemas/point-of-presence-partial"
          },
          {
            "title": "PointOfPresence",
            "type": "object",
            "required": [
              "name",
              "reachable_facilities",
              "available_devices",
              "id"
            ]
          }
        ]
      },
      "point-of-presence-partial": {
        "title": "PartialPointOfPresence",
        "type": "object",
        "description": "Point Of Presence",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 40
          },
          "physical_facility": {
            "type": "string",
            "readOnly": true
          },
          "reachable_facilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "available_devices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        }
      },
      "product-offering": {
        "title": "ProductOffering",
        "description": "Polymorphic Product",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-product-offering"
          },
          {
            "$ref": "#/components/schemas/p2p-network-product-offering"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-product-offering"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-product-offering"
          },
          {
            "$ref": "#/components/schemas/cloud-network-product-offering"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-product-offering",
            "p2p_vc": "#/components/schemas/p2p-network-product-offering",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-product-offering",
            "p2mp_vc": "#/components/schemas/p2mp-network-product-offering",
            "cloud_vc": "#/components/schemas/cloud-network-product-offering"
          }
        }
      },
      "product-offering-partial": {
        "title": "ProductOffering (partial)",
        "description": "Polymorphic Product",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-product-offering-partial"
          },
          {
            "$ref": "#/components/schemas/p2p-network-product-offering-partial"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-product-offering-partial"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-product-offering-partial"
          },
          {
            "$ref": "#/components/schemas/cloud-network-product-offering-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-product-offering-partial",
            "p2p_vc": "#/components/schemas/p2p-network-product-offering-partial",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-product-offering-partial",
            "p2mp_vc": "#/components/schemas/p2mp-network-product-offering-partial",
            "cloud_vc": "#/components/schemas/cloud-network-product-offering-partial"
          }
        }
      },
      "blackholing-network-feature-config": {
        "allOf": [
          {
            "$ref": "#/components/schemas/blackholing-network-feature-config-partial"
          },
          {
            "title": "BlackholingNetworkFeatureConfig",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "network_feature",
              "network_service_config",
              "activated",
              "filtered_prefixes",
              "id",
              "type"
            ]
          }
        ]
      },
      "blackholing-network-feature-config-partial": {
        "title": "PartialBlackholingNetworkFeatureConfig",
        "type": "object",
        "description": "Blackholing Network Feature Config",
        "properties": {
          "type": {
            "type": "string",
            "example": "blackholing"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "network_feature": {
            "type": "string"
          },
          "network_service_config": {
            "type": "string"
          },
          "activated": {
            "type": "boolean"
          },
          "ixp_specific_configuration": {
            "type": "string",
            "nullable": true,
            "maxLength": 2048
          },
          "filtered_prefixes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        },
        "required": [
          "type"
        ]
      },
      "blackholing-network-feature-config-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/blackholing-network-feature-config-request-partial"
          },
          {
            "title": "BlackholingNetworkFeatureConfigRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "network_feature",
              "network_service_config",
              "activated",
              "filtered_prefixes",
              "type"
            ]
          }
        ]
      },
      "blackholing-network-feature-config-request-partial": {
        "title": "PartialBlackholingNetworkFeatureConfigRequest",
        "type": "object",
        "description": "Blackholing Network Feature Config Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "blackholing"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "network_feature": {
            "type": "string"
          },
          "network_service_config": {
            "type": "string"
          },
          "activated": {
            "type": "boolean"
          },
          "ixp_specific_configuration": {
            "type": "string",
            "nullable": true,
            "maxLength": 2048
          },
          "filtered_prefixes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "blackholing-network-feature-config-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/blackholing-network-feature-config-update-partial"
          },
          {
            "title": "BlackholingNetworkFeatureConfigUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "activated",
              "filtered_prefixes",
              "type"
            ]
          }
        ]
      },
      "blackholing-network-feature-config-update-partial": {
        "title": "PartialBlackholingNetworkFeatureConfigUpdate",
        "type": "object",
        "description": "Blackholing Network Feature Config Update",
        "properties": {
          "type": {
            "type": "string",
            "example": "blackholing"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "activated": {
            "type": "boolean"
          },
          "ixp_specific_configuration": {
            "type": "string",
            "nullable": true,
            "maxLength": 2048
          },
          "filtered_prefixes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "cloud-network-service-config": {
        "allOf": [
          {
            "$ref": "#/components/schemas/cloud-network-service-config-partial"
          },
          {
            "title": "CloudNetworkServiceConfig",
            "type": "object",
            "required": [
              "id",
              "network_service",
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "handover",
              "cloud_vlan",
              "type"
            ]
          }
        ]
      },
      "cloud-network-service-config-partial": {
        "title": "PartialCloudNetworkServiceConfig",
        "type": "object",
        "description": "Cloud Network Service Config",
        "properties": {
          "type": {
            "type": "string",
            "example": "cloud_vc"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "network_service": {
            "type": "string",
            "description": "The id of the configured network service."
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "handover": {
            "type": "integer",
            "description": "must be a value smaller than diversity from network-service"
          },
          "cloud_vlan": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "minimum": 1,
            "maximum": 4094
          }
        },
        "required": [
          "type"
        ]
      },
      "cloud-network-service-config-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/cloud-network-service-config-request-partial"
          },
          {
            "title": "CloudNetworkServiceConfigRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "network_service",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "handover",
              "cloud_vlan",
              "type"
            ]
          }
        ]
      },
      "cloud-network-service-config-request-partial": {
        "title": "PartialCloudNetworkServiceConfigRequest",
        "type": "object",
        "description": "Cloud Network Service Config Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "cloud_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "network_service": {
            "type": "string",
            "description": "The id of the network service to configure."
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "handover": {
            "type": "integer",
            "description": "must be a value smaller than diversity from network-service"
          },
          "cloud_vlan": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "minimum": 1,
            "maximum": 4094
          }
        },
        "required": [
          "type"
        ]
      },
      "cloud-network-service-config-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/cloud-network-service-config-update-partial"
          },
          {
            "title": "CloudNetworkServiceConfigUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "vlan_config",
              "billing_account",
              "contacts",
              "connection",
              "handover",
              "cloud_vlan",
              "type"
            ]
          }
        ]
      },
      "cloud-network-service-config-update-partial": {
        "title": "PartialCloudNetworkServiceConfigUpdate",
        "type": "object",
        "description": "Cloud Network Service Config Update",
        "properties": {
          "type": {
            "type": "string",
            "example": "cloud_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "handover": {
            "type": "integer",
            "description": "must be a value smaller than diversity from network-service"
          },
          "cloud_vlan": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "minimum": 1,
            "maximum": 4094
          }
        },
        "required": [
          "type"
        ]
      },
      "connection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/connection-partial"
          },
          {
            "title": "Connection",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "mode",
              "id"
            ]
          }
        ]
      },
      "connection-partial": {
        "title": "PartialConnection",
        "type": "object",
        "description": "Connection",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "mode": {
            "type": "string",
            "enum": [
              "lag_lacp",
              "lag_static",
              "flex_ethernet",
              "standalone"
            ],
            "description": "Sets the mode of the connection. The mode can be:\n\n- `lag_lacp`: connection is build as a LAG with LACP enabled\n- `lag_static`: connection is build as LAG with static configuration\n- `flex_ethernet`: connect is build as a FlexEthernet channel\n- `standalone`: only one demarc is allowed in this connection without\nany bundling.\n",
            "example": "lag_lacp"
          },
          "lacp_timeout": {
            "type": "string",
            "enum": [
              "slow",
              "fast"
            ],
            "description": "This sets the LACP Timeout mode. Both ends of the connections need\nto be configured the same.\n",
            "example": "slow",
            "nullable": true
          },
          "speed": {
            "type": "integer",
            "description": "Shows the total bandwidth of the connection in Mbit/s.\n",
            "example": 20000,
            "nullable": true,
            "minimum": 0
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "name": {
            "type": "string",
            "maxLength": 80
          },
          "demarcs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reference to the demarcs belonging to this connection. Typically\nall demarcs within one connection are distributed over the same\ndevice.\n",
            "example": [
              "ID23",
              "42",
              "5"
            ]
          }
        }
      },
      "connection-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/connection-request-partial"
          },
          {
            "title": "ConnectionRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "mode"
            ]
          }
        ]
      },
      "connection-request-partial": {
        "title": "PartialConnectionRequest",
        "type": "object",
        "description": "Connection Request",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "mode": {
            "type": "string",
            "enum": [
              "lag_lacp",
              "lag_static",
              "flex_ethernet",
              "standalone"
            ],
            "description": "Sets the mode of the connection. The mode can be:\n\n- `lag_lacp`: connection is build as a LAG with LACP enabled\n- `lag_static`: connection is build as LAG with static configuration\n- `flex_ethernet`: connect is build as a FlexEthernet channel\n- `standalone`: only one demarc is allowed in this connection without\nany bundling.\n",
            "example": "lag_lacp"
          },
          "lacp_timeout": {
            "type": "string",
            "enum": [
              "slow",
              "fast"
            ],
            "description": "This sets the LACP Timeout mode. Both ends of the connections need\nto be configured the same.\n",
            "example": "slow",
            "nullable": true
          },
          "speed": {
            "type": "integer",
            "description": "Shows the total bandwidth of the connection in Mbit/s.\n",
            "example": 20000,
            "nullable": true,
            "minimum": 0
          }
        }
      },
      "connection-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/connection-update-partial"
          },
          {
            "title": "ConnectionUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "mode"
            ]
          }
        ]
      },
      "connection-update-partial": {
        "title": "PartialConnectionUpdate",
        "type": "object",
        "description": "Connection Update",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "mode": {
            "type": "string",
            "enum": [
              "lag_lacp",
              "lag_static",
              "flex_ethernet",
              "standalone"
            ],
            "description": "Sets the mode of the connection. The mode can be:\n\n- `lag_lacp`: connection is build as a LAG with LACP enabled\n- `lag_static`: connection is build as LAG with static configuration\n- `flex_ethernet`: connect is build as a FlexEthernet channel\n- `standalone`: only one demarc is allowed in this connection without\nany bundling.\n",
            "example": "lag_lacp"
          },
          "lacp_timeout": {
            "type": "string",
            "enum": [
              "slow",
              "fast"
            ],
            "description": "This sets the LACP Timeout mode. Both ends of the connections need\nto be configured the same.\n",
            "example": "slow",
            "nullable": true
          },
          "speed": {
            "type": "integer",
            "description": "Shows the total bandwidth of the connection in Mbit/s.\n",
            "example": 20000,
            "nullable": true,
            "minimum": 0
          }
        }
      },
      "demarcation-point": {
        "allOf": [
          {
            "$ref": "#/components/schemas/demarcation-point-partial"
          },
          {
            "title": "DemarcationPoint",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "id",
              "media_type",
              "pop"
            ]
          }
        ]
      },
      "demarcation-point-partial": {
        "title": "PartialDemarcationPoint",
        "type": "object",
        "description": "Demarc",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "nullable": true
          },
          "speed": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "minimum": 0
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "name": {
            "type": "string",
            "description": "Name of the demarcation point (set by the IXP)",
            "default": "",
            "readOnly": true,
            "maxLength": 80
          },
          "media_type": {
            "type": "string",
            "description": "The media type of the interface.\nSee the device's capabilities to see what types\nare available.\n",
            "example": "10GBASE-LR",
            "maxLength": 20
          },
          "pop": {
            "type": "string"
          }
        }
      },
      "demarcation-point-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/demarcation-point-request-partial"
          },
          {
            "title": "DemarcationPointRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "pop",
              "media_type"
            ]
          }
        ]
      },
      "demarcation-point-request-partial": {
        "title": "PartialDemarcationPointRequest",
        "type": "object",
        "description": "Demarc Request",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "nullable": true
          },
          "speed": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "minimum": 0
          },
          "pop": {
            "type": "string"
          },
          "media_type": {
            "type": "string",
            "description": "The media type of the interface.\nSee the device's capabilities to see what types\nare available.\n",
            "example": "10GBASE-LR",
            "maxLength": 20
          }
        }
      },
      "demarcation-point-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/demarcation-point-update-partial"
          },
          {
            "title": "DemarcationPointUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts"
            ]
          }
        ]
      },
      "demarcation-point-update-partial": {
        "title": "PartialDemarcationPointUpdate",
        "type": "object",
        "description": "Demarc Update",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "nullable": true
          },
          "speed": {
            "type": "integer",
            "readOnly": true,
            "nullable": true,
            "minimum": 0
          }
        }
      },
      "exchange-lan-network-service-config": {
        "allOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-config-partial"
          },
          {
            "title": "ExchangeLanNetworkServiceConfig",
            "type": "object",
            "required": [
              "id",
              "network_service",
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "asns",
              "listed",
              "type"
            ]
          }
        ]
      },
      "exchange-lan-network-service-config-partial": {
        "title": "PartialExchangeLanNetworkServiceConfig",
        "type": "object",
        "description": "Exchange Lan Network Service Config",
        "properties": {
          "type": {
            "type": "string",
            "example": "exchange_lan"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "network_service": {
            "type": "string",
            "description": "The id of the configured network service."
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "asns": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "maximum": 4294967295
            }
          },
          "macs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "listed": {
            "type": "boolean",
            "description": "The customer wants to be featured on the member list"
          }
        },
        "required": [
          "type"
        ]
      },
      "exchange-lan-network-service-config-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-config-request-partial"
          },
          {
            "title": "ExchangeLanNetworkServiceConfigRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "network_service",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "asns",
              "listed",
              "type"
            ]
          }
        ]
      },
      "exchange-lan-network-service-config-request-partial": {
        "title": "PartialExchangeLanNetworkServiceConfigRequest",
        "type": "object",
        "description": "Exchange Lan Network Service Config Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "exchange_lan"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "network_service": {
            "type": "string",
            "description": "The id of the network service to configure."
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "asns": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "maximum": 4294967295
            }
          },
          "macs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "listed": {
            "type": "boolean",
            "description": "The customer wants to be featured on the member list"
          }
        },
        "required": [
          "type"
        ]
      },
      "exchange-lan-network-service-config-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-config-update-partial"
          },
          {
            "title": "ExchangeLanNetworkServiceConfigUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "vlan_config",
              "billing_account",
              "contacts",
              "connection",
              "asns",
              "listed",
              "type"
            ]
          }
        ]
      },
      "exchange-lan-network-service-config-update-partial": {
        "title": "PartialExchangeLanNetworkServiceConfigUpdate",
        "type": "object",
        "description": "Exchange Lan Network Service Config Update",
        "properties": {
          "type": {
            "type": "string",
            "example": "exchange_lan"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "asns": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "maximum": 4294967295
            }
          },
          "macs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "listed": {
            "type": "boolean",
            "description": "The customer wants to be featured on the member list"
          }
        },
        "required": [
          "type"
        ]
      },
      "ixp-router-network-feature-config": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ixp-router-network-feature-config-partial"
          },
          {
            "title": "IXPRouterNetworkFeatureConfig",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "network_feature",
              "network_service_config",
              "max_prefix",
              "bgp_session_type",
              "id",
              "type"
            ]
          }
        ]
      },
      "ixp-router-network-feature-config-partial": {
        "title": "PartialIXPRouterNetworkFeatureConfig",
        "type": "object",
        "description": "IXP Router Network Feature Config",
        "properties": {
          "type": {
            "type": "string",
            "example": "ixp_router"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "network_feature": {
            "type": "string"
          },
          "network_service_config": {
            "type": "string"
          },
          "max_prefix": {
            "type": "integer",
            "minimum": 0
          },
          "password": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "bgp_session_type": {
            "type": "string",
            "enum": [
              "active",
              "passive"
            ]
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        },
        "required": [
          "type"
        ]
      },
      "ixp-router-network-feature-config-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ixp-router-network-feature-config-request-partial"
          },
          {
            "title": "IXPRouterNetworkFeatureConfigRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "network_feature",
              "network_service_config",
              "max_prefix",
              "bgp_session_type",
              "type"
            ]
          }
        ]
      },
      "ixp-router-network-feature-config-request-partial": {
        "title": "PartialIXPRouterNetworkFeatureConfigRequest",
        "type": "object",
        "description": "IXP Router Network Feature Config Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "ixp_router"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "network_feature": {
            "type": "string"
          },
          "network_service_config": {
            "type": "string"
          },
          "max_prefix": {
            "type": "integer",
            "minimum": 0
          },
          "password": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "bgp_session_type": {
            "type": "string",
            "enum": [
              "active",
              "passive"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "ixp-router-network-feature-config-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ixp-router-network-feature-config-update-partial"
          },
          {
            "title": "IXPRouterNetworkFeatureConfigUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "max_prefix",
              "bgp_session_type",
              "type"
            ]
          }
        ]
      },
      "ixp-router-network-feature-config-update-partial": {
        "title": "PartialIXPRouterNetworkFeatureConfigUpdate",
        "type": "object",
        "description": "IXP Router Network Feature Config Update",
        "properties": {
          "type": {
            "type": "string",
            "example": "ixp_router"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "max_prefix": {
            "type": "integer",
            "minimum": 0
          },
          "password": {
            "type": "string",
            "nullable": true,
            "maxLength": 128
          },
          "bgp_session_type": {
            "type": "string",
            "enum": [
              "active",
              "passive"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "m-p2mp-network-service-config": {
        "allOf": [
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-config-partial"
          },
          {
            "title": "MP2MPNetworkServiceConfig",
            "type": "object",
            "required": [
              "id",
              "network_service",
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "type"
            ]
          }
        ]
      },
      "m-p2mp-network-service-config-partial": {
        "title": "PartialMP2MPNetworkServiceConfig",
        "type": "object",
        "description": "MP2MP Network Service Config",
        "properties": {
          "type": {
            "type": "string",
            "example": "mp2mp_vc"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "network_service": {
            "type": "string",
            "description": "The id of the configured network service."
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "macs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "m-p2mp-network-service-config-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-config-request-partial"
          },
          {
            "title": "MP2MPNetworkServiceConfigRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "network_service",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "type"
            ]
          }
        ]
      },
      "m-p2mp-network-service-config-request-partial": {
        "title": "PartialMP2MPNetworkServiceConfigRequest",
        "type": "object",
        "description": "MP2MP Network Service Config Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "mp2mp_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "network_service": {
            "type": "string",
            "description": "The id of the network service to configure."
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "macs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "m-p2mp-network-service-config-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-config-update-partial"
          },
          {
            "title": "MP2MPNetworkServiceConfigUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "vlan_config",
              "billing_account",
              "contacts",
              "connection",
              "type"
            ]
          }
        ]
      },
      "m-p2mp-network-service-config-update-partial": {
        "title": "PartialMP2MPNetworkServiceConfigUpdate",
        "type": "object",
        "description": "MP2MP Network Service Config Update",
        "properties": {
          "type": {
            "type": "string",
            "example": "mp2mp_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "macs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "network-feature-config": {
        "title": "NetworkFeatureConfig",
        "description": "Polymorphic Network Feature Config",
        "oneOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-config"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "route_server": "#/components/schemas/route-server-network-feature-config"
          }
        }
      },
      "network-feature-config-partial": {
        "title": "NetworkFeatureConfig (partial)",
        "description": "Polymorphic Network Feature Config",
        "oneOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-config-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "route_server": "#/components/schemas/route-server-network-feature-config-partial"
          }
        }
      },
      "network-feature-config-request": {
        "title": "NetworkFeatureConfigRequest",
        "description": "Polymorphic Network Feature Config Request",
        "oneOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-config-request"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "route_server": "#/components/schemas/route-server-network-feature-config-request"
          }
        }
      },
      "network-feature-config-request-partial": {
        "title": "NetworkFeatureConfigRequest (partial)",
        "description": "Polymorphic Network Feature Config Request",
        "oneOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-config-request-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "route_server": "#/components/schemas/route-server-network-feature-config-request-partial"
          }
        }
      },
      "network-feature-config-update": {
        "title": "NetworkFeatureConfigUpdate",
        "description": "Polymorphic Network Feauture Config Update",
        "oneOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-config-update"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "route_server": "#/components/schemas/route-server-network-feature-config-update"
          }
        }
      },
      "network-feature-config-update-partial": {
        "title": "NetworkFeatureConfigUpdate (partial)",
        "description": "Polymorphic Network Feauture Config Update",
        "oneOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-config-update-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "route_server": "#/components/schemas/route-server-network-feature-config-update-partial"
          }
        }
      },
      "network-service-config": {
        "title": "NetworkServiceConfig",
        "description": "Polymorphic Network Service Config",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-config"
          },
          {
            "$ref": "#/components/schemas/p2p-network-service-config"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service-config"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-config"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service-config"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-service-config",
            "p2p_vc": "#/components/schemas/p2p-network-service-config",
            "p2mp_vc": "#/components/schemas/p2mp-network-service-config",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service-config",
            "cloud_vc": "#/components/schemas/cloud-network-service-config"
          }
        }
      },
      "network-service-config-partial": {
        "title": "NetworkServiceConfig (partial)",
        "description": "Polymorphic Network Service Config",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-config-partial"
          },
          {
            "$ref": "#/components/schemas/p2p-network-service-config-partial"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service-config-partial"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-config-partial"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service-config-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-service-config-partial",
            "p2p_vc": "#/components/schemas/p2p-network-service-config-partial",
            "p2mp_vc": "#/components/schemas/p2mp-network-service-config-partial",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service-config-partial",
            "cloud_vc": "#/components/schemas/cloud-network-service-config-partial"
          }
        }
      },
      "network-service-config-request": {
        "title": "NetworkServiceConfigRequest",
        "description": "Polymorhic Network Service Config Request",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-config-request"
          },
          {
            "$ref": "#/components/schemas/p2p-network-service-config-request"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service-config-request"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-config-request"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service-config-request"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-service-config-request",
            "p2p_vc": "#/components/schemas/p2p-network-service-config-request",
            "p2mp_vc": "#/components/schemas/p2mp-network-service-config-request",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service-config-request",
            "cloud_vc": "#/components/schemas/cloud-network-service-config-request"
          }
        }
      },
      "network-service-config-request-partial": {
        "title": "NetworkServiceConfigRequest (partial)",
        "description": "Polymorhic Network Service Config Request",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-config-request-partial"
          },
          {
            "$ref": "#/components/schemas/p2p-network-service-config-request-partial"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service-config-request-partial"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-config-request-partial"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service-config-request-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-service-config-request-partial",
            "p2p_vc": "#/components/schemas/p2p-network-service-config-request-partial",
            "p2mp_vc": "#/components/schemas/p2mp-network-service-config-request-partial",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service-config-request-partial",
            "cloud_vc": "#/components/schemas/cloud-network-service-config-request-partial"
          }
        }
      },
      "network-service-config-update": {
        "title": "NetworkServiceConfigUpdate",
        "description": "Polymorphic Network Service Config",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-config-update"
          },
          {
            "$ref": "#/components/schemas/p2p-network-service-config-update"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service-config-request"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-config-request"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service-config-update"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-service-config-update",
            "p2p_vc": "#/components/schemas/p2p-network-service-config-update",
            "p2mp_vc": "#/components/schemas/p2mp-network-service-config-request",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service-config-request",
            "cloud_vc": "#/components/schemas/cloud-network-service-config-update"
          }
        }
      },
      "network-service-config-update-partial": {
        "title": "NetworkServiceConfigUpdate (partial)",
        "description": "Polymorphic Network Service Config",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-config-update-partial"
          },
          {
            "$ref": "#/components/schemas/p2p-network-service-config-update-partial"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service-config-request-partial"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-config-request-partial"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service-config-update-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-service-config-update-partial",
            "p2p_vc": "#/components/schemas/p2p-network-service-config-update-partial",
            "p2mp_vc": "#/components/schemas/p2mp-network-service-config-request-partial",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service-config-request-partial",
            "cloud_vc": "#/components/schemas/cloud-network-service-config-update-partial"
          }
        }
      },
      "p2mp-network-service-config": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2mp-network-service-config-partial"
          },
          {
            "title": "P2MPNetworkServiceConfig",
            "type": "object",
            "required": [
              "id",
              "network_service",
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "type"
            ]
          }
        ]
      },
      "p2mp-network-service-config-partial": {
        "title": "PartialP2MPNetworkServiceConfig",
        "type": "object",
        "description": "P2MP Network Service Config",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2mp_vc"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "network_service": {
            "type": "string",
            "description": "The id of the configured network service."
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "role": {
            "type": "string",
            "enum": [
              "root",
              "leaf"
            ],
            "default": "leaf"
          }
        },
        "required": [
          "type"
        ]
      },
      "p2mp-network-service-config-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2mp-network-service-config-request-partial"
          },
          {
            "title": "P2MPNetworkServiceConfigRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "network_service",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "type"
            ]
          }
        ]
      },
      "p2mp-network-service-config-request-partial": {
        "title": "PartialP2MPNetworkServiceConfigRequest",
        "type": "object",
        "description": "P2MP Network Service Config Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2mp_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "network_service": {
            "type": "string",
            "description": "The id of the network service to configure."
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "role": {
            "type": "string",
            "enum": [
              "root",
              "leaf"
            ],
            "default": "leaf"
          }
        },
        "required": [
          "type"
        ]
      },
      "p2mp-network-service-config-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2mp-network-service-config-update-partial"
          },
          {
            "title": "P2MPNetworkServiceConfigUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "vlan_config",
              "billing_account",
              "contacts",
              "connection",
              "type"
            ]
          }
        ]
      },
      "p2mp-network-service-config-update-partial": {
        "title": "PartialP2MPNetworkServiceConfigUpdate",
        "type": "object",
        "description": "P2MP Network Service Config Update",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2mp_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "role": {
            "type": "string",
            "enum": [
              "root",
              "leaf"
            ],
            "default": "leaf"
          }
        },
        "required": [
          "type"
        ]
      },
      "p2p-network-service-config": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2p-network-service-config-partial"
          },
          {
            "title": "P2PNetworkServiceConfig",
            "type": "object",
            "required": [
              "id",
              "network_service",
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "type"
            ]
          }
        ]
      },
      "p2p-network-service-config-partial": {
        "title": "PartialP2PNetworkServiceConfig",
        "type": "object",
        "description": "P2P Network Service Config",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2p_vc"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string",
            "maxLength": 80
          },
          "network_service": {
            "type": "string",
            "description": "The id of the configured network service."
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. This is\nthe same as the configured P2P network service.",
            "readOnly": true,
            "minimum": 1
          }
        },
        "required": [
          "type"
        ]
      },
      "p2p-network-service-config-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2p-network-service-config-request-partial"
          },
          {
            "title": "P2PNetworkServiceConfigRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "network_service",
              "billing_account",
              "contacts",
              "connection",
              "vlan_config",
              "type"
            ]
          }
        ]
      },
      "p2p-network-service-config-request-partial": {
        "title": "PartialP2PNetworkServiceConfigRequest",
        "type": "object",
        "description": "P2P Network Service Config Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2p_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "network_service": {
            "type": "string",
            "description": "The id of the network service to configure."
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          }
        },
        "required": [
          "type"
        ]
      },
      "p2p-network-service-config-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2p-network-service-config-update-partial"
          },
          {
            "title": "P2PNetworkServiceConfigUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "vlan_config",
              "billing_account",
              "contacts",
              "connection",
              "type"
            ]
          }
        ]
      },
      "p2p-network-service-config-update-partial": {
        "title": "PartialP2PNetworkServiceConfigUpdate",
        "type": "object",
        "description": "P2P Network Service Config Update",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2p_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "vlan_config": {
            "$ref": "#/components/schemas/vlan-config"
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "connection": {
            "type": "string",
            "description": "The id of the connection to use for this service config. This\nassociates the service to a LAG. All traffic comming in on the\nconnection with the correct VLAN-ID will be transported to this\nservice."
          },
          "network_feature_configs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of ids of network feature configurations.\n",
            "example": [
              "12356",
              "43829"
            ],
            "readOnly": true
          }
        },
        "required": [
          "type"
        ]
      },
      "rate-limited-network-service-config": {
        "allOf": [
          {
            "$ref": "#/components/schemas/rate-limited-network-service-config-partial"
          },
          {
            "title": "RateLimitedNetworkServiceConfig",
            "type": "object"
          }
        ]
      },
      "rate-limited-network-service-config-partial": {
        "title": "PartialRateLimitedNetworkServiceConfig",
        "type": "object",
        "description": "Rate limited network services include a capacity\nproperty.",
        "properties": {
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          }
        }
      },
      "route-server-network-feature-config": {
        "allOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-config-partial"
          },
          {
            "title": "RouteServerNetworkFeatureConfig",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "network_feature",
              "network_service_config",
              "asn",
              "session_mode",
              "bgp_session_type",
              "id",
              "type"
            ]
          }
        ]
      },
      "route-server-network-feature-config-partial": {
        "title": "PartialRouteServerNetworkFeatureConfig",
        "type": "object",
        "description": "Route Server Network Feature Config",
        "properties": {
          "type": {
            "type": "string",
            "example": "route_server"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "network_feature": {
            "type": "string"
          },
          "network_service_config": {
            "type": "string"
          },
          "asn": {
            "type": "integer",
            "format": "int64",
            "description": "The ASN of the peer.\n",
            "example": 4200000023,
            "minimum": 0,
            "maximum": 4294967295
          },
          "password": {
            "type": "string",
            "description": "The cleartext BGP session password",
            "default": "",
            "example": "bgp-session-test-23",
            "maxLength": 128
          },
          "as_set_v4": {
            "type": "string",
            "description": "AS-Set of the customer for IPv4 prefix filtering.\nThis is used to generate\nfilters on the router servers.\nOnly valid referenced prefixes within the AS-Set\nare allowed inbound to the route server. All other routes are\nfiltered.\n\nThis field is *required* with session mode `public`\nif the route server network feature supports the `af_inet`\naddress family.\n\nImportant: The format has to be: \"AS-SET@IRR\". IRR is the database\nwhere the AS-SET is registred. Typically used IRR's are RADB, RIPE,\nNTTCOM, APNIC, ALTDB, LEVEL3, ARIN, AFRINIC, LACNIC\n",
            "example": "MOON-AS@RIPE",
            "nullable": true,
            "maxLength": 100
          },
          "as_set_v6": {
            "type": "string",
            "description": "AS-Set of the customer for IPv6. This is used to generate filters\non the router servers. Only valid referenced prefixes within\nthe AS-Set are allowed inbound to the route server.\nAll other routes are filtered.\n\nThis field is *required* with session mode `public`\nif the route server network feature supports the `af_inet6`\naddress family.\n\nImportant: The format has to be: \"AS-SET@IRR\". IRR is the database\nwhere the AS-SET is registred. Typically used IRR's are RADB, RIPE,\nNTTCOM, APNIC, ALTDB, LEVEL3, ARIN, AFRINIC, LACNIC\n",
            "example": "MOON-AS@RIPE",
            "nullable": true,
            "maxLength": 100
          },
          "max_prefix_v4": {
            "type": "integer",
            "description": "Announcing more than `max_prefix` IPv4 prefixes the bgp\nsession will be droped.\n",
            "example": 5000,
            "nullable": true,
            "minimum": 0
          },
          "max_prefix_v6": {
            "type": "integer",
            "description": "Announcing more than `max_prefix` IPv6 prefixes the bgp\nsession will be droped.\n",
            "example": 5000,
            "nullable": true,
            "minimum": 0
          },
          "insert_ixp_asn": {
            "type": "boolean",
            "description": "Insert the ASN of the IXP into the AS path. This function is only\nused in special cases. In 99% of all cases, it should be false.\n",
            "default": true
          },
          "session_mode": {
            "type": "string",
            "enum": [
              "public",
              "collector"
            ],
            "description": "Set the session mode with the routeserver.\n",
            "example": "public"
          },
          "bgp_session_type": {
            "type": "string",
            "enum": [
              "active",
              "passive"
            ],
            "description": "The session type describes which of the both parties will open the\nconnection. If set to passive, the customer router needs to open\nthe connection. If its set to active, the route server will open\nthe connection. The standard behavior on most IX's is passive.\n",
            "example": "passive"
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        },
        "required": [
          "type"
        ]
      },
      "route-server-network-feature-config-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-config-request-partial"
          },
          {
            "title": "RouteServerNetworkFeatureConfigRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "contacts",
              "network_feature",
              "network_service_config",
              "asn",
              "session_mode",
              "bgp_session_type",
              "type"
            ]
          }
        ]
      },
      "route-server-network-feature-config-request-partial": {
        "title": "PartialRouteServerNetworkFeatureConfigRequest",
        "type": "object",
        "description": "Route Server Network Feature Config Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "route_server"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          },
          "network_feature": {
            "type": "string"
          },
          "network_service_config": {
            "type": "string"
          },
          "asn": {
            "type": "integer",
            "format": "int64",
            "description": "The ASN of the peer.\n",
            "example": 4200000023,
            "minimum": 0,
            "maximum": 4294967295
          },
          "password": {
            "type": "string",
            "description": "The cleartext BGP session password",
            "default": "",
            "example": "bgp-session-test-23",
            "maxLength": 128
          },
          "as_set_v4": {
            "type": "string",
            "description": "AS-Set of the customer for IPv4 prefix filtering.\nThis is used to generate\nfilters on the router servers.\nOnly valid referenced prefixes within the AS-Set\nare allowed inbound to the route server. All other routes are\nfiltered.\n\nThis field is *required* with session mode `public`\nif the route server network feature supports the `af_inet`\naddress family.\n\nImportant: The format has to be: \"AS-SET@IRR\". IRR is the database\nwhere the AS-SET is registred. Typically used IRR's are RADB, RIPE,\nNTTCOM, APNIC, ALTDB, LEVEL3, ARIN, AFRINIC, LACNIC\n",
            "example": "MOON-AS@RIPE",
            "nullable": true,
            "maxLength": 100
          },
          "as_set_v6": {
            "type": "string",
            "description": "AS-Set of the customer for IPv6. This is used to generate filters\non the router servers. Only valid referenced prefixes within\nthe AS-Set are allowed inbound to the route server.\nAll other routes are filtered.\n\nThis field is *required* with session mode `public`\nif the route server network feature supports the `af_inet6`\naddress family.\n\nImportant: The format has to be: \"AS-SET@IRR\". IRR is the database\nwhere the AS-SET is registred. Typically used IRR's are RADB, RIPE,\nNTTCOM, APNIC, ALTDB, LEVEL3, ARIN, AFRINIC, LACNIC\n",
            "example": "MOON-AS@RIPE",
            "nullable": true,
            "maxLength": 100
          },
          "max_prefix_v4": {
            "type": "integer",
            "description": "Announcing more than `max_prefix` IPv4 prefixes the bgp\nsession will be droped.\n",
            "example": 5000,
            "nullable": true,
            "minimum": 0
          },
          "max_prefix_v6": {
            "type": "integer",
            "description": "Announcing more than `max_prefix` IPv6 prefixes the bgp\nsession will be droped.\n",
            "example": 5000,
            "nullable": true,
            "minimum": 0
          },
          "insert_ixp_asn": {
            "type": "boolean",
            "description": "Insert the ASN of the IXP into the AS path. This function is only\nused in special cases. In 99% of all cases, it should be false.\n",
            "default": true
          },
          "session_mode": {
            "type": "string",
            "enum": [
              "public",
              "collector"
            ],
            "description": "Set the session mode with the routeserver.\n",
            "example": "public"
          },
          "bgp_session_type": {
            "type": "string",
            "enum": [
              "active",
              "passive"
            ],
            "description": "The session type describes which of the both parties will open the\nconnection. If set to passive, the customer router needs to open\nthe connection. If its set to active, the route server will open\nthe connection. The standard behavior on most IX's is passive.\n",
            "example": "passive"
          }
        },
        "required": [
          "type"
        ]
      },
      "route-server-network-feature-config-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-config-update-partial"
          },
          {
            "title": "RouteServerNetworkFeatureConfigUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "asn",
              "session_mode",
              "bgp_session_type",
              "type"
            ]
          }
        ]
      },
      "route-server-network-feature-config-update-partial": {
        "title": "PartialRouteServerNetworkFeatureConfigUpdate",
        "type": "object",
        "description": "Route Server Network Feature Config Update",
        "properties": {
          "type": {
            "type": "string",
            "example": "route_server"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "asn": {
            "type": "integer",
            "format": "int64",
            "description": "The ASN of the peer.\n",
            "example": 4200000023,
            "minimum": 0,
            "maximum": 4294967295
          },
          "password": {
            "type": "string",
            "description": "The cleartext BGP session password",
            "default": "",
            "example": "bgp-session-test-23",
            "maxLength": 128
          },
          "as_set_v4": {
            "type": "string",
            "description": "AS-Set of the customer for IPv4 prefix filtering.\nThis is used to generate\nfilters on the router servers.\nOnly valid referenced prefixes within the AS-Set\nare allowed inbound to the route server. All other routes are\nfiltered.\n\nThis field is *required* with session mode `public`\nif the route server network feature supports the `af_inet`\naddress family.\n\nImportant: The format has to be: \"AS-SET@IRR\". IRR is the database\nwhere the AS-SET is registred. Typically used IRR's are RADB, RIPE,\nNTTCOM, APNIC, ALTDB, LEVEL3, ARIN, AFRINIC, LACNIC\n",
            "example": "MOON-AS@RIPE",
            "nullable": true,
            "maxLength": 100
          },
          "as_set_v6": {
            "type": "string",
            "description": "AS-Set of the customer for IPv6. This is used to generate filters\non the router servers. Only valid referenced prefixes within\nthe AS-Set are allowed inbound to the route server.\nAll other routes are filtered.\n\nThis field is *required* with session mode `public`\nif the route server network feature supports the `af_inet6`\naddress family.\n\nImportant: The format has to be: \"AS-SET@IRR\". IRR is the database\nwhere the AS-SET is registred. Typically used IRR's are RADB, RIPE,\nNTTCOM, APNIC, ALTDB, LEVEL3, ARIN, AFRINIC, LACNIC\n",
            "example": "MOON-AS@RIPE",
            "nullable": true,
            "maxLength": 100
          },
          "max_prefix_v4": {
            "type": "integer",
            "description": "Announcing more than `max_prefix` IPv4 prefixes the bgp\nsession will be droped.\n",
            "example": 5000,
            "nullable": true,
            "minimum": 0
          },
          "max_prefix_v6": {
            "type": "integer",
            "description": "Announcing more than `max_prefix` IPv6 prefixes the bgp\nsession will be droped.\n",
            "example": 5000,
            "nullable": true,
            "minimum": 0
          },
          "insert_ixp_asn": {
            "type": "boolean",
            "description": "Insert the ASN of the IXP into the AS path. This function is only\nused in special cases. In 99% of all cases, it should be false.\n",
            "default": true
          },
          "session_mode": {
            "type": "string",
            "enum": [
              "public",
              "collector"
            ],
            "description": "Set the session mode with the routeserver.\n",
            "example": "public"
          },
          "bgp_session_type": {
            "type": "string",
            "enum": [
              "active",
              "passive"
            ],
            "description": "The session type describes which of the both parties will open the\nconnection. If set to passive, the customer router needs to open\nthe connection. If its set to active, the route server will open\nthe connection. The standard behavior on most IX's is passive.\n",
            "example": "passive"
          }
        },
        "required": [
          "type"
        ]
      },
      "v-lan-config-dot1q": {
        "allOf": [
          {
            "$ref": "#/components/schemas/v-lan-config-dot1q-partial"
          },
          {
            "title": "VLanConfigDot1Q",
            "type": "object",
            "required": [
              "vlan",
              "vlan_type"
            ]
          }
        ]
      },
      "v-lan-config-dot1q-partial": {
        "title": "PartialVLanConfigDot1Q",
        "type": "object",
        "description": "A Dot1Q vlan configuration",
        "properties": {
          "vlan_type": {
            "type": "string",
            "example": "dot1q"
          },
          "vlan": {
            "type": "integer",
            "format": "int32",
            "description": "A VLAN tag\n",
            "example": 23,
            "minimum": 1,
            "maximum": 4094
          },
          "vlan_ethertype": {
            "type": "string",
            "enum": [
              "0x8100",
              "0x88a8",
              "0x9100"
            ],
            "description": "The ethertype of the vlan in hexadecimal notation.",
            "default": "0x8100"
          }
        },
        "required": [
          "vlan_type"
        ]
      },
      "v-lan-config-port": {
        "allOf": [
          {
            "$ref": "#/components/schemas/v-lan-config-port-partial"
          },
          {
            "title": "VLanConfigPort",
            "type": "object",
            "required": [
              "vlan_type"
            ]
          }
        ]
      },
      "v-lan-config-port-partial": {
        "title": "PartialVLanConfigPort",
        "type": "object",
        "description": "A Port vlan configuration",
        "properties": {
          "vlan_type": {
            "type": "string",
            "example": "port"
          }
        },
        "required": [
          "vlan_type"
        ]
      },
      "v-lan-config-qin-q": {
        "allOf": [
          {
            "$ref": "#/components/schemas/v-lan-config-qin-q-partial"
          },
          {
            "title": "VLanConfigQinQ",
            "type": "object",
            "required": [
              "outer_vlan",
              "inner_vlan",
              "vlan_type"
            ]
          }
        ]
      },
      "v-lan-config-qin-q-partial": {
        "title": "PartialVLanConfigQinQ",
        "type": "object",
        "description": "A QinQ vlan configuration",
        "properties": {
          "vlan_type": {
            "type": "string",
            "example": "dot1q"
          },
          "outer_vlan": {
            "type": "integer",
            "format": "int32",
            "description": "The outer VLAN id.\n",
            "example": 200,
            "minimum": 1,
            "maximum": 4094
          },
          "outer_vlan_ethertype": {
            "type": "string",
            "enum": [
              "0x8100",
              "0x88a8",
              "0x9100"
            ],
            "description": "The ethertype of the outer tag in hexadecimal notation.",
            "default": "0x8100"
          },
          "inner_vlan": {
            "type": "integer",
            "format": "int32",
            "description": "The inner VLAN id.\n",
            "example": 200,
            "minimum": 1,
            "maximum": 4094
          }
        },
        "required": [
          "vlan_type"
        ]
      },
      "vlan-config": {
        "title": "VlanConfig",
        "description": "A vlan configuration",
        "oneOf": [
          {
            "$ref": "#/components/schemas/v-lan-config-dot1q"
          },
          {
            "$ref": "#/components/schemas/v-lan-config-qin-q"
          },
          {
            "$ref": "#/components/schemas/v-lan-config-port"
          }
        ],
        "discriminator": {
          "propertyName": "vlan_type",
          "mapping": {
            "dot1q": "#/components/schemas/v-lan-config-dot1q",
            "qinq": "#/components/schemas/v-lan-config-qin-q",
            "port": "#/components/schemas/v-lan-config-port"
          }
        }
      },
      "vlan-config-partial": {
        "title": "VlanConfig (partial)",
        "description": "A vlan configuration",
        "oneOf": [
          {
            "$ref": "#/components/schemas/v-lan-config-dot1q-partial"
          },
          {
            "$ref": "#/components/schemas/v-lan-config-qin-q-partial"
          },
          {
            "$ref": "#/components/schemas/v-lan-config-port-partial"
          }
        ],
        "discriminator": {
          "propertyName": "vlan_type",
          "mapping": {
            "dot1q": "#/components/schemas/v-lan-config-dot1q-partial",
            "qinq": "#/components/schemas/v-lan-config-qin-q-partial",
            "port": "#/components/schemas/v-lan-config-port-partial"
          }
        }
      },
      "account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/account-partial"
          },
          {
            "title": "Account",
            "type": "object",
            "required": [
              "name",
              "address",
              "id"
            ]
          }
        ]
      },
      "account-partial": {
        "title": "PartialAccount",
        "type": "object",
        "description": "Account",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of a managing account. Can be used for creating\na customer hierachy.\n",
            "example": "IX:Account:231",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the account, how it gets represented\nin e.g. a \"customers list\".\n",
            "example": "Moonpeer Inc.",
            "maxLength": 80
          },
          "legal_name": {
            "type": "string",
            "description": "Legal name of the organisation.\nOnly required when it's different from the account name.\n",
            "example": "Moon Network Services LLS.",
            "nullable": true,
            "maxLength": 80
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "billing_information": {
            "$ref": "#/components/schemas/billing-information"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 80
          },
          "discoverable": {
            "type": "boolean",
            "default": false
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        }
      },
      "account-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/account-request-partial"
          },
          {
            "title": "AccountRequest",
            "type": "object",
            "required": [
              "name",
              "address"
            ]
          }
        ]
      },
      "account-request-partial": {
        "title": "PartialAccountRequest",
        "type": "object",
        "description": "Account Request",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of a managing account. Can be used for creating\na customer hierachy.\n",
            "example": "IX:Account:231",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the account, how it gets represented\nin e.g. a \"customers list\".\n",
            "example": "Moonpeer Inc.",
            "maxLength": 80
          },
          "legal_name": {
            "type": "string",
            "description": "Legal name of the organisation.\nOnly required when it's different from the account name.\n",
            "example": "Moon Network Services LLS.",
            "nullable": true,
            "maxLength": 80
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "billing_information": {
            "$ref": "#/components/schemas/billing-information"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 80
          },
          "discoverable": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "account-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/account-update-partial"
          },
          {
            "title": "AccountUpdate",
            "type": "object",
            "required": [
              "name",
              "address"
            ]
          }
        ]
      },
      "account-update-partial": {
        "title": "PartialAccountUpdate",
        "type": "object",
        "description": "Account Update Request",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of a managing account. Can be used for creating\na customer hierachy.\n",
            "example": "IX:Account:231",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the account, how it gets represented\nin e.g. a \"customers list\".\n",
            "example": "Moonpeer Inc.",
            "maxLength": 80
          },
          "legal_name": {
            "type": "string",
            "description": "Legal name of the organisation.\nOnly required when it's different from the account name.\n",
            "example": "Moon Network Services LLS.",
            "nullable": true,
            "maxLength": 80
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "billing_information": {
            "$ref": "#/components/schemas/billing-information"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 80
          },
          "discoverable": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/address-partial"
          },
          {
            "title": "Address",
            "type": "object",
            "required": [
              "country",
              "locality",
              "postal_code",
              "street_address"
            ]
          }
        ]
      },
      "address-partial": {
        "title": "PartialAddress",
        "type": "object",
        "description": "",
        "properties": {
          "country": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code, for example DE",
            "example": "US",
            "maxLength": 2
          },
          "locality": {
            "type": "string",
            "description": "The locality/city. For example, Mountain View.",
            "example": "Mountain View",
            "maxLength": 40
          },
          "region": {
            "type": "string",
            "description": "The region. For example, CA",
            "example": "CA",
            "nullable": true,
            "maxLength": 80
          },
          "postal_code": {
            "type": "string",
            "description": "A postal code. For example, 9404",
            "example": "9409",
            "maxLength": 24
          },
          "street_address": {
            "type": "string",
            "description": "The street address. For example, 1600 Amphitheatre Pkwy.",
            "example": "1600 Amphitheatre Pkwy.",
            "maxLength": 80
          },
          "post_office_box_number": {
            "type": "string",
            "description": "The post office box number for PO box addresses.",
            "example": "2335232",
            "nullable": true,
            "maxLength": 80
          }
        }
      },
      "billing-information": {
        "allOf": [
          {
            "$ref": "#/components/schemas/billing-information-partial"
          },
          {
            "title": "BillingInformation",
            "type": "object",
            "required": [
              "name",
              "address"
            ]
          }
        ]
      },
      "billing-information-partial": {
        "title": "PartialBillingInformation",
        "type": "object",
        "description": "",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the organisation receiving invoices.\n",
            "example": "Moonoc Network Services LLS.",
            "maxLength": 80
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "vat_number": {
            "type": "string",
            "description": "Value-added tax number, required for\neuropean reverse charge system.\n",
            "example": "UK2300000042",
            "nullable": true,
            "minLength": 2,
            "maxLength": 20
          }
        }
      },
      "consumable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/consumable-partial"
          },
          {
            "title": "Consumable",
            "type": "object",
            "required": [
              "consuming_account"
            ]
          }
        ]
      },
      "consumable-partial": {
        "title": "PartialConsumable",
        "type": "object",
        "description": "Consumable",
        "properties": {
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          }
        }
      },
      "contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/contact-partial"
          },
          {
            "title": "Contact",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "id"
            ]
          }
        ]
      },
      "contact-partial": {
        "title": "PartialContact",
        "type": "object",
        "description": "Contact",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "name": {
            "type": "string",
            "description": "A name of a person or an organisation",
            "example": "Some A. Name",
            "nullable": true,
            "maxLength": 128
          },
          "telephone": {
            "type": "string",
            "description": "The telephone number in E.164 Phone Number Formatting",
            "example": "+442071838750",
            "nullable": true,
            "maxLength": 40
          },
          "email": {
            "type": "string",
            "description": "The email of the legal company entity.\n",
            "example": "info@moon-peer.net",
            "nullable": true,
            "maxLength": 80
          },
          "id": {
            "type": "string"
          }
        }
      },
      "contact-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/contact-request-partial"
          },
          {
            "title": "ContactRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account"
            ]
          }
        ]
      },
      "contact-request-partial": {
        "title": "PartialContactRequest",
        "type": "object",
        "description": "A contact creation request",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "name": {
            "type": "string",
            "description": "A name of a person or an organisation",
            "example": "Some A. Name",
            "nullable": true,
            "maxLength": 128
          },
          "telephone": {
            "type": "string",
            "description": "The telephone number in E.164 Phone Number Formatting",
            "example": "+442071838750",
            "nullable": true,
            "maxLength": 40
          },
          "email": {
            "type": "string",
            "description": "The email of the legal company entity.\n",
            "example": "info@moon-peer.net",
            "nullable": true,
            "maxLength": 80
          }
        }
      },
      "contact-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/contact-update-partial"
          },
          {
            "title": "ContactUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account"
            ]
          }
        ]
      },
      "contact-update-partial": {
        "title": "PartialContactUpdate",
        "type": "object",
        "description": "A contact update",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "name": {
            "type": "string",
            "description": "A name of a person or an organisation",
            "example": "Some A. Name",
            "nullable": true,
            "maxLength": 128
          },
          "telephone": {
            "type": "string",
            "description": "The telephone number in E.164 Phone Number Formatting",
            "example": "+442071838750",
            "nullable": true,
            "maxLength": 40
          },
          "email": {
            "type": "string",
            "description": "The email of the legal company entity.\n",
            "example": "info@moon-peer.net",
            "nullable": true,
            "maxLength": 80
          }
        }
      },
      "contactable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/contactable-partial"
          },
          {
            "title": "Contactable",
            "type": "object",
            "required": [
              "contacts"
            ]
          }
        ]
      },
      "contactable-partial": {
        "title": "PartialContactable",
        "type": "object",
        "description": "Contactable",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of contacts. See the documentation\non the specific `required_contact_roles` on what\ncontacts to provide.\n",
            "example": [
              "c-impl:123",
              "c-noc:331"
            ]
          }
        }
      },
      "external-ref": {
        "allOf": [
          {
            "$ref": "#/components/schemas/external-ref-partial"
          },
          {
            "title": "ExternalRef",
            "type": "object"
          }
        ]
      },
      "external-ref-partial": {
        "title": "PartialExternalRef",
        "type": "object",
        "description": "External Reference",
        "properties": {
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          }
        }
      },
      "invoiceable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/invoiceable-partial"
          },
          {
            "title": "Invoiceable",
            "type": "object",
            "required": [
              "billing_account"
            ]
          }
        ]
      },
      "invoiceable-partial": {
        "title": "PartialInvoiceable",
        "type": "object",
        "description": "Invoiceable",
        "properties": {
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          }
        }
      },
      "manageable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/manageable-partial"
          },
          {
            "title": "Manageable",
            "type": "object",
            "required": [
              "managing_account"
            ]
          }
        ]
      },
      "manageable-partial": {
        "title": "PartialManageable",
        "type": "object",
        "description": "Managed",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          }
        }
      },
      "ownable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ownable-partial"
          },
          {
            "title": "Ownable",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account"
            ]
          }
        ]
      },
      "ownable-partial": {
        "title": "PartialOwnable",
        "type": "object",
        "description": "Ownable",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          }
        }
      },
      "role": {
        "allOf": [
          {
            "$ref": "#/components/schemas/role-partial"
          },
          {
            "title": "Role",
            "type": "object",
            "required": [
              "name",
              "required_fields",
              "id"
            ]
          }
        ]
      },
      "role-partial": {
        "title": "PartialRole",
        "type": "object",
        "description": "A role for a contact",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the role.\n",
            "example": "noc",
            "maxLength": 80
          },
          "required_fields": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 80
            },
            "description": "A list of required field names.\n",
            "example": [
              "name",
              "email"
            ]
          },
          "id": {
            "type": "string"
          }
        }
      },
      "role-assignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/role-assignment-partial"
          },
          {
            "title": "RoleAssignment",
            "type": "object",
            "required": [
              "role",
              "contact",
              "id"
            ]
          }
        ]
      },
      "role-assignment-partial": {
        "title": "PartialRoleAssignment",
        "type": "object",
        "description": "A role assignment for a contact",
        "properties": {
          "role": {
            "type": "string",
            "description": "The `id` of a role the contact is assigned to.\n",
            "example": "role:23"
          },
          "contact": {
            "type": "string",
            "description": "The `id` of a contact the role is assigned to.\n",
            "example": "contact:42b"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "role-assignment-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/role-assignment-request-partial"
          },
          {
            "title": "RoleAssignmentRequest",
            "type": "object",
            "required": [
              "role",
              "contact"
            ]
          }
        ]
      },
      "role-assignment-request-partial": {
        "title": "PartialRoleAssignmentRequest",
        "type": "object",
        "description": "A role assignment request",
        "properties": {
          "role": {
            "type": "string",
            "description": "The `id` of a role the contact is assigned to.\n",
            "example": "role:23"
          },
          "contact": {
            "type": "string",
            "description": "The `id` of a contact the role is assigned to.\n",
            "example": "contact:42b"
          }
        }
      },
      "role-assignment-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/role-assignment-update-partial"
          },
          {
            "title": "RoleAssignmentUpdate",
            "type": "object",
            "required": [
              "role",
              "contact"
            ]
          }
        ]
      },
      "role-assignment-update-partial": {
        "title": "PartialRoleAssignmentUpdate",
        "type": "object",
        "description": "A role assignemnt update",
        "properties": {
          "role": {
            "type": "string",
            "description": "The `id` of a role the contact is assigned to.\n",
            "example": "role:23"
          },
          "contact": {
            "type": "string",
            "description": "The `id` of a contact the role is assigned to.\n",
            "example": "contact:42b"
          }
        }
      },
      "role-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/role-request-partial"
          },
          {
            "title": "RoleRequest",
            "type": "object",
            "required": [
              "name",
              "required_fields"
            ]
          }
        ]
      },
      "role-request-partial": {
        "title": "PartialRoleRequest",
        "type": "object",
        "description": "A new role",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the role.\n",
            "example": "noc",
            "maxLength": 80
          },
          "required_fields": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 80
            },
            "description": "A list of required field names.\n",
            "example": [
              "name",
              "email"
            ]
          }
        }
      },
      "role-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/role-update-partial"
          },
          {
            "title": "RoleUpdate",
            "type": "object",
            "required": [
              "name",
              "required_fields"
            ]
          }
        ]
      },
      "role-update-partial": {
        "title": "PartialRoleUpdate",
        "type": "object",
        "description": "A role update",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the role.\n",
            "example": "noc",
            "maxLength": 80
          },
          "required_fields": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 80
            },
            "description": "A list of required field names.\n",
            "example": [
              "name",
              "email"
            ]
          }
        }
      },
      "event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/event-partial"
          },
          {
            "title": "Event",
            "type": "object",
            "required": [
              "serial",
              "type",
              "payload",
              "timestamp"
            ]
          }
        ]
      },
      "event-partial": {
        "title": "PartialEvent",
        "type": "object",
        "description": "Event",
        "properties": {
          "serial": {
            "type": "integer"
          },
          "account": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "stateful": {
        "allOf": [
          {
            "$ref": "#/components/schemas/stateful-partial"
          },
          {
            "title": "Stateful",
            "type": "object"
          }
        ]
      },
      "stateful-partial": {
        "title": "PartialStateful",
        "type": "object",
        "description": "A stateful object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          }
        }
      },
      "status": {
        "allOf": [
          {
            "$ref": "#/components/schemas/status-partial"
          },
          {
            "title": "Status",
            "type": "object",
            "required": [
              "severity",
              "tag",
              "message",
              "attrs",
              "timestamp"
            ]
          }
        ]
      },
      "status-partial": {
        "title": "PartialStatus",
        "type": "object",
        "description": "Status Message",
        "properties": {
          "severity": {
            "type": "integer",
            "format": "int32",
            "description": "We are using syslog severity levels: 0 = Emergency,\n1 = Alert, 2 = Critical, 3 = Error, 4 = Warning,\n5 = Notice, 6 = Informational, 7 = Debug.\n",
            "example": 2,
            "minimum": 0,
            "maximum": 7
          },
          "tag": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "attrs": {
            "type": "object"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ip-address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ip-address-partial"
          },
          {
            "title": "IpAddress",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "version",
              "address",
              "prefix_length",
              "id"
            ]
          }
        ]
      },
      "ip-address-partial": {
        "title": "PartialIpAddress",
        "type": "object",
        "description": "IP-Address",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "version": {
            "type": "integer",
            "description": "The version of the internet protocol.\n",
            "example": 4
          },
          "address": {
            "type": "string",
            "description": "IPv4 or IPv6 Address in the following format:\n- IPv4: [dot-decimal notation](https://en.wikipedia.org/wiki/Dot-decimal_notation)\n- IPv6: hexadecimal colon separated notation\n",
            "example": "23.142.52.0"
          },
          "prefix_length": {
            "type": "integer",
            "format": "int32",
            "description": "The CIDR ip prefix length\n",
            "example": 23,
            "minimum": 0,
            "maximum": 128
          },
          "fqdn": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "valid_not_before": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "valid_not_after": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        }
      },
      "ip-address-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ip-address-request-partial"
          },
          {
            "title": "IpAddressRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "version",
              "address",
              "prefix_length"
            ]
          }
        ]
      },
      "ip-address-request-partial": {
        "title": "PartialIpAddressRequest",
        "type": "object",
        "description": "IP-Address / Prefix allocation Request",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "version": {
            "type": "integer",
            "description": "The version of the internet protocol.\n",
            "example": 4
          },
          "address": {
            "type": "string",
            "description": "IPv4 or IPv6 Address in the following format:\n- IPv4: [dot-decimal notation](https://en.wikipedia.org/wiki/Dot-decimal_notation)\n- IPv6: hexadecimal colon separated notation\n",
            "example": "23.142.52.0"
          },
          "prefix_length": {
            "type": "integer",
            "format": "int32",
            "description": "The CIDR ip prefix length\n",
            "example": 23,
            "minimum": 0,
            "maximum": 128
          },
          "fqdn": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "valid_not_before": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "valid_not_after": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ip-address-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ip-address-update-partial"
          },
          {
            "title": "IpAddressUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "version",
              "address",
              "prefix_length"
            ]
          }
        ]
      },
      "ip-address-update-partial": {
        "title": "PartialIpAddressUpdate",
        "type": "object",
        "description": "IP-Address Update",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "version": {
            "type": "integer",
            "description": "The version of the internet protocol.\n",
            "example": 4
          },
          "address": {
            "type": "string",
            "description": "IPv4 or IPv6 Address in the following format:\n- IPv4: [dot-decimal notation](https://en.wikipedia.org/wiki/Dot-decimal_notation)\n- IPv6: hexadecimal colon separated notation\n",
            "example": "23.142.52.0"
          },
          "prefix_length": {
            "type": "integer",
            "format": "int32",
            "description": "The CIDR ip prefix length\n",
            "example": 23,
            "minimum": 0,
            "maximum": 128
          },
          "fqdn": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "valid_not_before": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "valid_not_after": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "mac-address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/mac-address-partial"
          },
          {
            "title": "MacAddress",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "address",
              "id"
            ]
          }
        ]
      },
      "mac-address-partial": {
        "title": "PartialMacAddress",
        "type": "object",
        "description": "MAC-Address",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "address": {
            "type": "string",
            "description": "MAC Address Value, formatted hexadecimal values with colons.\n",
            "example": "42:23:bc:8e:b8:b0"
          },
          "valid_not_before": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "valid_not_after": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "maxLength": 80
          }
        }
      },
      "mac-address-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/mac-address-request-partial"
          },
          {
            "title": "MacAddressRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "address"
            ]
          }
        ]
      },
      "mac-address-request-partial": {
        "title": "PartialMacAddressRequest",
        "type": "object",
        "description": "MAC-Address Request",
        "properties": {
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "address": {
            "type": "string",
            "description": "MAC Address Value, formatted hexadecimal values with colons.\n",
            "example": "42:23:bc:8e:b8:b0"
          },
          "valid_not_before": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "valid_not_after": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "problem-response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/problem-response-partial"
          },
          {
            "title": "ProblemResponse",
            "type": "object",
            "required": [
              "type"
            ]
          }
        ]
      },
      "problem-response-partial": {
        "title": "PartialProblemResponse",
        "type": "object",
        "description": "Encodes a problem into an appropriate response body.",
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference (see RFC3986) that identifies the\nproblem type.\n\nThis specification encourages that, when\ndereferenced, it provide human-readable documentation\nfor the problem type (e.g., using HTML\n[W3C.REC-html5-20141028]).\n\nWhen this member is not present, its value is assumed\nto be \"about:blank\".\n",
            "example": "about:blank"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type.\n\nIt SHOULD NOT change from occurrence to\noccurrence of the problem, except for purposes\nof localization (e.g., using proactive content\nnegotiation; see [RFC7231], Section 3.4).\n",
            "example": "Some fields have validation errors."
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code ([RFC7231], Section 6)\ngenerated by the origin server for this occurrence\nof the problem.",
            "minimum": 100
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this\noccurrence of the problem."
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific\noccurrence of the problem.  It may or may not yield\nfurther information if dereferenced."
          }
        }
      },
      "blackholing-network-feature": {
        "allOf": [
          {
            "$ref": "#/components/schemas/blackholing-network-feature-partial"
          },
          {
            "title": "BlackholingNetworkFeature",
            "type": "object",
            "required": [
              "id",
              "name",
              "required",
              "nfc_required_contact_roles",
              "flags",
              "network_service",
              "type"
            ]
          }
        ]
      },
      "blackholing-network-feature-partial": {
        "title": "PartialBlackholingNetworkFeature",
        "type": "object",
        "description": "Blackholing Network Feature",
        "properties": {
          "type": {
            "type": "string",
            "example": "blackholing"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 80
          },
          "required": {
            "type": "boolean"
          },
          "nfc_required_contact_roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The configuration will require at least one of each of the\nspecified roles assigned to any associated contacts.\n\nThe contacts can be associated through the `contacts` list\nproperty of the network feature configuration."
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ixp-specific-feature-flag"
            },
            "description": "A list of IXP specific feature flags. This can be used\nto see if e.g. RPKI hard filtering is available."
          },
          "network_service": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "blacklist-member-joining-rule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/blacklist-member-joining-rule-partial"
          },
          {
            "title": "BlacklistMemberJoiningRule",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "id",
              "network_service",
              "type"
            ]
          }
        ]
      },
      "blacklist-member-joining-rule-partial": {
        "title": "PartialBlacklistMemberJoiningRule",
        "type": "object",
        "description": "A rule for members joining a private vlan",
        "properties": {
          "type": {
            "type": "string",
            "example": "blacklist"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "id": {
            "type": "string"
          },
          "network_service": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "blacklist-member-joining-rule-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/blacklist-member-joining-rule-request-partial"
          },
          {
            "title": "BlacklistMemberJoiningRuleRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "network_service",
              "type"
            ]
          }
        ]
      },
      "blacklist-member-joining-rule-request-partial": {
        "title": "PartialBlacklistMemberJoiningRuleRequest",
        "type": "object",
        "description": "A new vlan member joining rule",
        "properties": {
          "type": {
            "type": "string",
            "example": "blacklist"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "network_service": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "blacklist-member-joining-rule-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/blacklist-member-joining-rule-update-partial"
          },
          {
            "title": "BlacklistMemberJoiningRuleUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "type"
            ]
          }
        ]
      },
      "blacklist-member-joining-rule-update-partial": {
        "title": "PartialBlacklistMemberJoiningRuleUpdate",
        "type": "object",
        "description": "A vlan member joining rule update",
        "properties": {
          "type": {
            "type": "string",
            "example": "blacklist"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          }
        },
        "required": [
          "type"
        ]
      },
      "cloud-network-service": {
        "allOf": [
          {
            "$ref": "#/components/schemas/cloud-network-service-partial"
          },
          {
            "title": "CloudNetworkService",
            "type": "object",
            "required": [
              "id",
              "managing_account",
              "consuming_account",
              "billing_account",
              "product_offering",
              "cloud_key",
              "diversity",
              "type"
            ]
          }
        ]
      },
      "cloud-network-service-partial": {
        "title": "PartialCloudNetworkService",
        "type": "object",
        "description": "Cloud Network Service",
        "properties": {
          "type": {
            "type": "string",
            "example": "cloud_vc"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "product_offering": {
            "type": "string"
          },
          "cloud_key": {
            "type": "string"
          },
          "diversity": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": [
          "type"
        ]
      },
      "cloud-network-service-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/cloud-network-service-request-partial"
          },
          {
            "title": "CloudNetworkServiceRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "product_offering",
              "cloud_key",
              "type"
            ]
          }
        ]
      },
      "cloud-network-service-request-partial": {
        "title": "PartialCloudNetworkServiceRequest",
        "type": "object",
        "description": "Cloud Network Service Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "cloud_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "product_offering": {
            "type": "string"
          },
          "cloud_key": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "exchange-lan-network-service": {
        "allOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-partial"
          },
          {
            "title": "ExchangeLanNetworkService",
            "type": "object",
            "required": [
              "id",
              "managing_account",
              "consuming_account",
              "product_offering",
              "name",
              "metro_area",
              "nsc_required_contact_roles",
              "network_features",
              "ips",
              "type"
            ]
          }
        ]
      },
      "exchange-lan-network-service-partial": {
        "title": "PartialExchangeLanNetworkService",
        "type": "object",
        "description": "Exchange Lan Network Service",
        "properties": {
          "type": {
            "type": "string",
            "example": "exchange_lan"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "product_offering": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Exchange dependend service name, will be shown on the invoice.",
            "maxLength": 40
          },
          "metro_area": {
            "type": "string",
            "description": "3 Letter (IATA) Airport Code of the MetroArea where\nthe exchange lan network service is available.\n",
            "example": "FRA",
            "maxLength": 3
          },
          "peeringdb_ixid": {
            "type": "integer",
            "description": "PeeringDB ixid",
            "nullable": true
          },
          "ixfdb_ixid": {
            "type": "integer",
            "description": "id of ixfdb",
            "nullable": true
          },
          "nsc_required_contact_roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The configuration will require at least one of each of the\nspecified roles assigned to any associated contacts.\n\nThe contacts can be associated through the `contacts` list\nproperty of the network service configuration."
          },
          "network_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "ixp-router-network-feature": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ixp-router-network-feature-partial"
          },
          {
            "title": "IXPRouterNetworkFeature",
            "type": "object",
            "required": [
              "id",
              "name",
              "required",
              "nfc_required_contact_roles",
              "flags",
              "network_service",
              "asn",
              "fqdn",
              "type"
            ]
          }
        ]
      },
      "ixp-router-network-feature-partial": {
        "title": "PartialIXPRouterNetworkFeature",
        "type": "object",
        "description": "IXP Router Network Feature",
        "properties": {
          "type": {
            "type": "string",
            "example": "ixp_router"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 80
          },
          "required": {
            "type": "boolean"
          },
          "nfc_required_contact_roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The configuration will require at least one of each of the\nspecified roles assigned to any associated contacts.\n\nThe contacts can be associated through the `contacts` list\nproperty of the network feature configuration."
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ixp-specific-feature-flag"
            },
            "description": "A list of IXP specific feature flags. This can be used\nto see if e.g. RPKI hard filtering is available."
          },
          "network_service": {
            "type": "string"
          },
          "asn": {
            "type": "integer",
            "minimum": 0
          },
          "fqdn": {
            "type": "string",
            "maxLength": 80
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "required": [
          "type"
        ]
      },
      "ixp-specific-feature-flag": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ixp-specific-feature-flag-partial"
          },
          {
            "title": "IXPSpecificFeatureFlag",
            "type": "object",
            "required": [
              "name",
              "description"
            ]
          }
        ]
      },
      "ixp-specific-feature-flag-partial": {
        "title": "PartialIXPSpecificFeatureFlag",
        "type": "object",
        "description": "IXP-Specific Feature Flag",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the feature flag.\n",
            "example": "RPKI",
            "maxLength": 20
          },
          "description": {
            "type": "string",
            "description": "The description of the feature flag.\n",
            "example": "RPKI Hard Filtering is available",
            "maxLength": 80
          }
        }
      },
      "m-p2mp-network-service": {
        "allOf": [
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-partial"
          },
          {
            "title": "MP2MPNetworkService",
            "type": "object",
            "required": [
              "id",
              "managing_account",
              "consuming_account",
              "billing_account",
              "product_offering",
              "name",
              "initiator_capacity",
              "default_capacity_min",
              "default_capacity_max",
              "nsc_required_contact_roles",
              "member_joining_rules",
              "network_features",
              "type"
            ]
          }
        ]
      },
      "m-p2mp-network-service-partial": {
        "title": "PartialMP2MPNetworkService",
        "type": "object",
        "description": "MP2MP Network Service",
        "properties": {
          "type": {
            "type": "string",
            "example": "mp2mp_vc"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "product_offering": {
            "type": "string"
          },
          "public": {
            "type": "boolean",
            "default": false
          },
          "name": {
            "type": "string",
            "description": "Name of the Closed User Group.",
            "maxLength": 40
          },
          "initiator_capacity": {
            "type": "integer",
            "minimum": 1
          },
          "default_capacity_min": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "default_capacity_max": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nsc_required_contact_roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The configuration will require at least one of each of the\nspecified roles assigned to any associated contacts.\n\nThe contacts can be associated through the `contacts` list\nproperty of the network service configuration."
          },
          "member_joining_rules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "network_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "m-p2mp-network-service-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-request-partial"
          },
          {
            "title": "MP2MPNetworkServiceRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "product_offering",
              "name",
              "initiator_capacity",
              "default_capacity_min",
              "default_capacity_max",
              "type"
            ]
          }
        ]
      },
      "m-p2mp-network-service-request-partial": {
        "title": "PartialMP2MPNetworkServiceRequest",
        "type": "object",
        "description": "MP2MP Network Service Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "mp2mp_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "product_offering": {
            "type": "string"
          },
          "public": {
            "type": "boolean",
            "default": false
          },
          "name": {
            "type": "string",
            "description": "Name of the Closed User Group.",
            "maxLength": 40
          },
          "initiator_capacity": {
            "type": "integer",
            "minimum": 1
          },
          "default_capacity_min": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "default_capacity_max": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "member-joining-rule": {
        "title": "MemberJoiningRule",
        "description": "Polymorphic Member Joining Rule",
        "oneOf": [
          {
            "$ref": "#/components/schemas/whitelist-member-joining-rule"
          },
          {
            "$ref": "#/components/schemas/blacklist-member-joining-rule"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "whitelist": "#/components/schemas/whitelist-member-joining-rule",
            "blacklist": "#/components/schemas/blacklist-member-joining-rule"
          }
        }
      },
      "member-joining-rule-partial": {
        "title": "MemberJoiningRule (partial)",
        "description": "Polymorphic Member Joining Rule",
        "oneOf": [
          {
            "$ref": "#/components/schemas/whitelist-member-joining-rule-partial"
          },
          {
            "$ref": "#/components/schemas/blacklist-member-joining-rule-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "whitelist": "#/components/schemas/whitelist-member-joining-rule-partial",
            "blacklist": "#/components/schemas/blacklist-member-joining-rule-partial"
          }
        }
      },
      "member-joining-rule-request": {
        "title": "MemberJoiningRuleRequest",
        "description": "Polymorphic Member Joining Rule Request",
        "oneOf": [
          {
            "$ref": "#/components/schemas/whitelist-member-joining-rule-request"
          },
          {
            "$ref": "#/components/schemas/blacklist-member-joining-rule-request"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "whitelist": "#/components/schemas/whitelist-member-joining-rule-request",
            "blacklist": "#/components/schemas/blacklist-member-joining-rule-request"
          }
        }
      },
      "member-joining-rule-request-partial": {
        "title": "MemberJoiningRuleRequest (partial)",
        "description": "Polymorphic Member Joining Rule Request",
        "oneOf": [
          {
            "$ref": "#/components/schemas/whitelist-member-joining-rule-request-partial"
          },
          {
            "$ref": "#/components/schemas/blacklist-member-joining-rule-request-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "whitelist": "#/components/schemas/whitelist-member-joining-rule-request-partial",
            "blacklist": "#/components/schemas/blacklist-member-joining-rule-request-partial"
          }
        }
      },
      "member-joining-rule-update": {
        "title": "MemberJoiningRuleUpdate",
        "description": "Polymorphic Member Joining Rule Update",
        "oneOf": [
          {
            "$ref": "#/components/schemas/whitelist-member-joining-rule-update"
          },
          {
            "$ref": "#/components/schemas/blacklist-member-joining-rule-update"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "whitelist": "#/components/schemas/whitelist-member-joining-rule-update",
            "blacklist": "#/components/schemas/blacklist-member-joining-rule-update"
          }
        }
      },
      "member-joining-rule-update-partial": {
        "title": "MemberJoiningRuleUpdate (partial)",
        "description": "Polymorphic Member Joining Rule Update",
        "oneOf": [
          {
            "$ref": "#/components/schemas/whitelist-member-joining-rule-update-partial"
          },
          {
            "$ref": "#/components/schemas/blacklist-member-joining-rule-update-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "whitelist": "#/components/schemas/whitelist-member-joining-rule-update-partial",
            "blacklist": "#/components/schemas/blacklist-member-joining-rule-update-partial"
          }
        }
      },
      "network-feature": {
        "title": "NetworkFeature",
        "description": "Polymorphic Network Feature",
        "oneOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "route_server": "#/components/schemas/route-server-network-feature"
          }
        }
      },
      "network-feature-partial": {
        "title": "NetworkFeature (partial)",
        "description": "Polymorphic Network Feature",
        "oneOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "route_server": "#/components/schemas/route-server-network-feature-partial"
          }
        }
      },
      "network-service": {
        "title": "NetworkService",
        "description": "Polymorphic Network Services",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service"
          },
          {
            "$ref": "#/components/schemas/p2p-network-service"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-service",
            "p2p_vc": "#/components/schemas/p2p-network-service",
            "p2mp_vc": "#/components/schemas/p2mp-network-service",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service",
            "cloud_vc": "#/components/schemas/cloud-network-service"
          }
        }
      },
      "network-service-partial": {
        "title": "NetworkService (partial)",
        "description": "Polymorphic Network Services",
        "oneOf": [
          {
            "$ref": "#/components/schemas/exchange-lan-network-service-partial"
          },
          {
            "$ref": "#/components/schemas/p2p-network-service-partial"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service-partial"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-partial"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "exchange_lan": "#/components/schemas/exchange-lan-network-service-partial",
            "p2p_vc": "#/components/schemas/p2p-network-service-partial",
            "p2mp_vc": "#/components/schemas/p2mp-network-service-partial",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service-partial",
            "cloud_vc": "#/components/schemas/cloud-network-service-partial"
          }
        }
      },
      "network-service-request": {
        "title": "NetworkServiceRequest",
        "description": "Polymorphic Network Service Request",
        "oneOf": [
          {
            "$ref": "#/components/schemas/p2p-network-service-request"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service-request"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-request"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service-request"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "p2p_vc": "#/components/schemas/p2p-network-service-request",
            "p2mp_vc": "#/components/schemas/p2mp-network-service-request",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service-request",
            "cloud_vc": "#/components/schemas/cloud-network-service-request"
          }
        }
      },
      "network-service-request-partial": {
        "title": "NetworkServiceRequest (partial)",
        "description": "Polymorphic Network Service Request",
        "oneOf": [
          {
            "$ref": "#/components/schemas/p2p-network-service-request-partial"
          },
          {
            "$ref": "#/components/schemas/p2mp-network-service-request-partial"
          },
          {
            "$ref": "#/components/schemas/m-p2mp-network-service-request-partial"
          },
          {
            "$ref": "#/components/schemas/cloud-network-service-request-partial"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "p2p_vc": "#/components/schemas/p2p-network-service-request-partial",
            "p2mp_vc": "#/components/schemas/p2mp-network-service-request-partial",
            "mp2mp_vc": "#/components/schemas/m-p2mp-network-service-request-partial",
            "cloud_vc": "#/components/schemas/cloud-network-service-request-partial"
          }
        }
      },
      "p2mp-network-service": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2mp-network-service-partial"
          },
          {
            "title": "P2MPNetworkService",
            "type": "object",
            "required": [
              "id",
              "managing_account",
              "consuming_account",
              "billing_account",
              "product_offering",
              "name",
              "initiator_capacity",
              "default_capacity_min",
              "default_capacity_max",
              "nsc_required_contact_roles",
              "network_features",
              "member_joining_rules",
              "type"
            ]
          }
        ]
      },
      "p2mp-network-service-partial": {
        "title": "PartialP2MPNetworkService",
        "type": "object",
        "description": "P2MP Network Service",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2mp_vc"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "product_offering": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the closed user group.",
            "maxLength": 40
          },
          "public": {
            "type": "boolean",
            "default": false
          },
          "initiator_capacity": {
            "type": "integer",
            "minimum": 1
          },
          "default_capacity_min": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "default_capacity_max": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nsc_required_contact_roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The configuration will require at least one of each of the\nspecified roles assigned to any associated contacts.\n\nThe contacts can be associated through the `contacts` list\nproperty of the network service configuration."
          },
          "network_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "member_joining_rules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "p2mp-network-service-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2mp-network-service-request-partial"
          },
          {
            "title": "P2MPNetworkServiceRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "product_offering",
              "name",
              "initiator_capacity",
              "default_capacity_min",
              "default_capacity_max",
              "type"
            ]
          }
        ]
      },
      "p2mp-network-service-request-partial": {
        "title": "PartialP2MPNetworkServiceRequest",
        "type": "object",
        "description": "P2MP Network Service Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2mp_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "product_offering": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the closed user group.",
            "maxLength": 40
          },
          "public": {
            "type": "boolean",
            "default": false
          },
          "initiator_capacity": {
            "type": "integer",
            "minimum": 1
          },
          "default_capacity_min": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "default_capacity_max": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "p2p-network-service": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2p-network-service-partial"
          },
          {
            "title": "P2PNetworkService",
            "type": "object",
            "required": [
              "id",
              "managing_account",
              "consuming_account",
              "billing_account",
              "product_offering",
              "joining_member_account",
              "nsc_required_contact_roles",
              "type"
            ]
          }
        ]
      },
      "p2p-network-service-partial": {
        "title": "PartialP2PNetworkService",
        "type": "object",
        "description": "P2P Network Service",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2p_vc"
          },
          "state": {
            "type": "string",
            "enum": [
              "requested",
              "allocated",
              "testing",
              "production",
              "decommission_requested",
              "decommissioned",
              "archived",
              "error",
              "operator",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/status"
            }
          },
          "id": {
            "type": "string"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "product_offering": {
            "type": "string"
          },
          "joining_member_account": {
            "type": "string",
            "description": "The account of the B-side member joining the P2P.\n",
            "example": "231829"
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          },
          "nsc_required_contact_roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The configuration will require at least one of each of the\nspecified roles assigned to any associated contacts.\n\nThe contacts can be associated through the `contacts` list\nproperty of the network service configuration."
          }
        },
        "required": [
          "type"
        ]
      },
      "p2p-network-service-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/p2p-network-service-request-partial"
          },
          {
            "title": "P2PNetworkServiceRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "billing_account",
              "product_offering",
              "joining_member_account",
              "type"
            ]
          }
        ]
      },
      "p2p-network-service-request-partial": {
        "title": "PartialP2PNetworkServiceRequest",
        "type": "object",
        "description": "P2P Network Service Request",
        "properties": {
          "type": {
            "type": "string",
            "example": "p2p_vc"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order ID which will be displayed on the invoice.\n",
            "default": "",
            "example": "Project: DC Moon",
            "maxLength": 80
          },
          "contract_ref": {
            "type": "string",
            "description": "A reference to a contract.\n",
            "example": "contract:31824",
            "nullable": true,
            "maxLength": 128
          },
          "billing_account": {
            "type": "string",
            "description": "Please note, that an account requires billing_information\nto be filled in."
          },
          "product_offering": {
            "type": "string"
          },
          "joining_member_account": {
            "type": "string",
            "description": "The account of the B-side member joining the P2P.\n",
            "example": "231829"
          },
          "capacity": {
            "type": "integer",
            "description": "The capacity of the service in Mbps. If set to Null,\nthe maximum capacity will be used.\nThat means, the service can consume up\nto the total bandwidth of the `connection`.\n\nTypically the service is charged based on the capacity.",
            "nullable": true,
            "minimum": 1
          }
        },
        "required": [
          "type"
        ]
      },
      "route-server-network-feature": {
        "allOf": [
          {
            "$ref": "#/components/schemas/route-server-network-feature-partial"
          },
          {
            "title": "RouteServerNetworkFeature",
            "type": "object",
            "required": [
              "id",
              "name",
              "required",
              "nfc_required_contact_roles",
              "flags",
              "network_service",
              "asn",
              "fqdn",
              "looking_glass_url",
              "address_families",
              "session_mode",
              "available_bgp_session_types",
              "type"
            ]
          }
        ]
      },
      "route-server-network-feature-partial": {
        "title": "PartialRouteServerNetworkFeature",
        "type": "object",
        "description": "Route Server Network Feature",
        "properties": {
          "type": {
            "type": "string",
            "example": "route_server"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 80
          },
          "required": {
            "type": "boolean"
          },
          "nfc_required_contact_roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The configuration will require at least one of each of the\nspecified roles assigned to any associated contacts.\n\nThe contacts can be associated through the `contacts` list\nproperty of the network feature configuration."
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ixp-specific-feature-flag"
            },
            "description": "A list of IXP specific feature flags. This can be used\nto see if e.g. RPKI hard filtering is available."
          },
          "network_service": {
            "type": "string"
          },
          "asn": {
            "type": "integer",
            "minimum": 0
          },
          "fqdn": {
            "type": "string",
            "description": "The FQDN of the route server.\n",
            "example": "rs1.moon-ix.net",
            "maxLength": 80
          },
          "looking_glass_url": {
            "type": "string",
            "description": "The url of the looking glass.\n",
            "example": "https://lg.moon-ix.net/rs1"
          },
          "address_families": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "af_inet",
                "af_inet6"
              ]
            },
            "description": "When creating a route server feature config, remember\nto specify which address family or families to use.\n",
            "example": [
              "af_inet"
            ]
          },
          "session_mode": {
            "type": "string",
            "enum": [
              "public",
              "collector"
            ],
            "description": "When creating a route server feature config, remember\nto specify the same session_mode as the route server.\n",
            "example": "public"
          },
          "available_bgp_session_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "active",
                "passive"
              ]
            },
            "description": "The route server provides the following session modes.\n",
            "example": [
              "passive"
            ]
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "required": [
          "type"
        ]
      },
      "whitelist-member-joining-rule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/whitelist-member-joining-rule-partial"
          },
          {
            "title": "WhitelistMemberJoiningRule",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "capacity_min",
              "capacity_max",
              "id",
              "network_service",
              "type"
            ]
          }
        ]
      },
      "whitelist-member-joining-rule-partial": {
        "title": "PartialWhitelistMemberJoiningRule",
        "type": "object",
        "description": "A rule for members joining a private vlan",
        "properties": {
          "type": {
            "type": "string",
            "example": "whitelist"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "capacity_min": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "capacity_max": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "id": {
            "type": "string"
          },
          "network_service": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "whitelist-member-joining-rule-request": {
        "allOf": [
          {
            "$ref": "#/components/schemas/whitelist-member-joining-rule-request-partial"
          },
          {
            "title": "WhitelistMemberJoiningRuleRequest",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "capacity_min",
              "capacity_max",
              "network_service",
              "type"
            ]
          }
        ]
      },
      "whitelist-member-joining-rule-request-partial": {
        "title": "PartialWhitelistMemberJoiningRuleRequest",
        "type": "object",
        "description": "A new vlan member joining rule",
        "properties": {
          "type": {
            "type": "string",
            "example": "whitelist"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "capacity_min": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "capacity_max": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "network_service": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "whitelist-member-joining-rule-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/whitelist-member-joining-rule-update-partial"
          },
          {
            "title": "WhitelistMemberJoiningRuleUpdate",
            "type": "object",
            "required": [
              "managing_account",
              "consuming_account",
              "capacity_min",
              "capacity_max",
              "type"
            ]
          }
        ]
      },
      "whitelist-member-joining-rule-update-partial": {
        "title": "PartialWhitelistMemberJoiningRuleUpdate",
        "type": "object",
        "description": "A vlan member joining rule update",
        "properties": {
          "type": {
            "type": "string",
            "example": "whitelist"
          },
          "managing_account": {
            "type": "string",
            "description": "The `id` of the account responsible for managing the service via\nthe API.\nUsed to be `billing_customer`.\n",
            "example": "238189294"
          },
          "consuming_account": {
            "type": "string",
            "description": "The `id` of the account consuming a service.\n\nUsed to be `owning_customer`.\n",
            "example": "2381982"
          },
          "external_ref": {
            "type": "string",
            "description": "Reference field, free to use for the API user.",
            "example": "IX:Service:23042",
            "nullable": true,
            "maxLength": 128
          },
          "capacity_min": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "capacity_max": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          }
        },
        "required": [
          "type"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "accounts",
      "description": "An `Account` is a company using services from an IXP.\nThe accounts can have a hierarchy. An account can have\nsubaccounts (\"subcustomers\"). Each account needs to have\ndifferent contacts, depending on the exchange and\nthe service he wants to use.\n\nFor an account to become operational, you need to associate\na contact with a `legal` role."
    },
    {
      "name": "auth",
      "description": "Open an authorized session with the IX-API by\nsending an `api_key` and `api_secret` pair to the\n`/api/v2/tokens` resource.\n\nThis is equivalent to a 'login' endpoint.\n\nUpon success, you will receive an `access_token` and\na `refreh_token`. The refresh token can be used for\nregenerating the lifetime limited access token.\n\nUse the `access_token` as `Bearer` in your `Authorziation` header\nfor getting access to the API.\n\nThe `auth_token` (and `refresh_token`) have limited lifetimes.\nAs both are JWTs, you can directy get this information from them.\n\nWhen the session (`access_token`) expires, you can (within\nthe lifetime of the `refresh_token`) reauthenticate by\nproviding only the `refresh_token`.\n\nMake a `POST` request to the `/api/v2/auth/refresh` resource."
    },
    {
      "name": "connections",
      "description": "A `Connection` is a functional group of physical connections\ncollected together into a LAG (aka trunk).\n\nA `connection` with only one `demarc` can be also configured as\nstandalone which means no LAG configuration on the switch."
    },
    {
      "name": "contacts",
      "description": "A `Contact` is a role undertaking a specific responsibility\nwithin an account, typically a department or agent of the\ncompany.\n\nA contact is bound to the account by the `consuming_account`\nproperty and can have many assigned `Role`s."
    },
    {
      "name": "demarcs",
      "description": "A `Demarc` (demarcation point) is the point at which customer and\nIXP networks meet, eg a physical port / socket, generally with a\nspecified bandwidth.\n\nDemarcs are listed on a LoA (Letter of Authorisation).\nExchange customers need this information to order a cross connect\nfrom the datacenter operator to be interconnected to the exchange.\n\nDue to the reason a `demarc` is patched to a switch, it comes with\nnecessary extra informations like speed and optics `type`.\nA `demarc` is always associated to one `pop`."
    },
    {
      "name": "devices",
      "description": "A `Device` is a network hardware device, typically a Switch, which\nis located at a specified facility and connected to one or more\nPoPs.\n\nThey may be physically located at their related PoPs or remotely\navailable."
    },
    {
      "name": "facilities",
      "description": "A `Facility` is a data centre, with a determined physical address,\nfrom which a defined set of PoPs can be accessed"
    },
    {
      "name": "ips",
      "description": "An `IP` is a IPv4 or 6 addresses, with a given validity period.\nSome services require IP addresses to work.\n\nWhen you are joining an `exchange_lan` network service\nfor example, addresses on the peering lan will be assigned\nto you."
    },
    {
      "name": "macs",
      "description": "A `MAC` is a MAC addresses with a given validity period.\n\nSome services require MAC addresses to work.\n\nThe address itself can not be updated after creation.\nHowever: It can be expired by changing the `valid_not_before`\nand `valid_not_after` properties."
    },
    {
      "name": "member-joining-rules",
      "description": "Show or modify membership rules"
    },
    {
      "name": "network-feature-configs",
      "description": "A `NetworkFeatureConfig` is a customer's configuration for\nusage of a `NetworkFeature`."
    },
    {
      "name": "network-features",
      "description": "`NetworkFeatures` are functionality made available to customers\nwithin a `NetworkService`.\nCertain features may need to be configured by a customer to use\nthat service.\n\nThis can be for example a `route server` on an `exchange lan`.\n\nSome of these features are mandatory to configure if you\nwant to access the platform. Which of these features you have to\nconfigure you can query using:\n    `/api/v2/network-features?required=true`"
    },
    {
      "name": "network-service-configs",
      "description": "A `NetworkServiceConfig` is a customer's configuration for usage\nof a `NetworkService`, eg the configuration of a (subset of a)\nconnection for that customer's traffic\n\nThe `type` of the config determines the service you are\nconfiguring.\n\nYou can find the services available to you on the platform,\nby querying the `/api/v2/network-services` resource."
    },
    {
      "name": "network-services",
      "description": "A `NetworkService` is an instances of a `Product` accessible by one\nor multiple users, depending on the type of product\n\nFor example, each Exchange Network LAN is considered as a shared\ninstance of the related LAN's `Product`"
    },
    {
      "name": "pops",
      "description": "A `PoP` is a location within a Facility which is connected to a\nsingle Network Infrastructure and has defined reachability of\nother facilities.\n\nA single room may contain multiple PoPs, each linking to a\ndifferent infrastructure."
    },
    {
      "name": "product-offerings",
      "description": "A `Product` is a network or peering-related product of a defined\ntype sold by an IXP to its `Customers`"
    },
    {
      "name": "role-assignments",
      "description": "A `Contact` can be assigned to many `Roles`."
    },
    {
      "name": "roles",
      "description": "A single `Role` enables a `Contact` to act as a provider\nfor a specific set of information.\n\nThese are usually `implementation`, `noc`, `legal` or `peering`."
    }
  ],
  "servers": [
    {
      "url": "/api/v2"
    }
  ]
}
